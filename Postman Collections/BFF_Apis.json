{
	"info": {
		"_postman_id": "00a1511e-943c-4720-addf-c37256e549e3",
		"name": "SOVOS_BFF_API's",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "LOGIN API",
			"item": [
				{
					"name": "Request Bearer Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "614d9c04-249e-4144-bad8-3220c9b8739e",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.status).to.eql(200);",
									"});",
									"",
									"pm.test(\"It should return general payload.\", function() {",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    pm.expect(jsonData.message).to.eql(\"Authenticated\");",
									"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
									"    pm.expect(jsonData.timestamp).to.not.eql(null);",
									"",
									"});",
									"",
									"pm.test(\"Authorization hash is present\", function () {",
									"    pm.response.to.have.header(\"platform-token\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "233ecf01-a565-4562-912f-474fd034c4ec",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{bff.authorization}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"trustfiles\",\n\t\"password\": \"Trustfiles123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{bff.url}}/api/v1/iam/login"
					},
					"response": []
				},
				{
					"name": "Request Bearer Token NOT ADMIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8329658f-dd63-4318-8dfd-ed1ca4e5b321",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.status).to.eql(200);",
									"});",
									"",
									"pm.test(\"It should return general payload.\", function() {",
									"    pm.expect(jsonData.success).to.eql(true);",
									"    pm.expect(jsonData.message).to.eql(\"Authenticated\");",
									"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
									"    pm.expect(jsonData.timestamp).to.not.eql(null);",
									"",
									"});",
									"",
									"pm.test(\"Authorization hash is present\", function () {",
									"    pm.response.to.have.header(\"platform-token\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f2c195c6-4851-44a6-af8e-dc3e0993cb5e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{bff.authorization}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"giullianoNotAdmin\",\n\t\"password\": \"giulliano\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{bff.url}}/api/v1/iam/login"
					},
					"response": []
				}
			],
			"id": "753397c1-4576-4316-904c-f261a3f3b9f7"
		},
		{
			"name": "PRODUCT API",
			"item": [
				{
					"name": "product list",
					"item": [
						{
							"name": "200 - List of products with a trustfiles user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7b3a5b87-96d4-4346-8840-a414b846dbfb",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Product List returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.products.productId).to.not.eql(null);",
											"    pm.expect(jsonData.data.products.displayName).to.not.eql(null);",
											"    pm.expect(jsonData.data.products.country).to.not.eql(null);",
											"    pm.expect(jsonData.data.products.baseUrl).to.not.eql(null);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "508e1b36-4d10-491e-8c10-7a4ead6a0719",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/products?orgId={{$guid}}",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "orgId",
											"value": "{{$guid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - List of products without guid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "104ff60a-1679-45f7-9da6-54b47693e8f2",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Product List returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8660510f-455a-43dd-b5bc-1332b804c41c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/products?orgId=",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "orgId",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "401 - Invalid Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e31b48f-632d-4b7f-af21-85d9c4dc3701",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(jsonData.status).to.eql(401);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Invalid credentials\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8f926aca-2958-4a9e-ac85-02335e3923bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "invalid",
										"password": "admin"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/products?orgId={{$guid}}",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "orgId",
											"value": "{{$guid}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "52c45211-5c91-4e02-b444-ef94d120ce9a",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "07cb7823-2df3-4378-b41f-98c236337efd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7c0c2527-a60d-4591-ad49-ce07bc25ae43",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "product configuration",
					"item": [
						{
							"name": "200 - Valid product configuration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fdba4086-d562-4911-b496-d8264425a3b1",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Product configuration listed\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6d3a1c52-ba18-4237-a346-a8457d8fb9fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Basic dHJ1c3RmaWxlczpUcnVzdGZpbGVzMTIz",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									},
									{
										"description": "Header used by postman mock to force http status, please ignore.",
										"key": "x-mock-response-code",
										"type": "text",
										"value": "200",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/products/:productId",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										":productId"
									],
									"query": [
										{
											"key": "productGroup",
											"value": "br_nfe",
											"disabled": true
										}
									],
									"variable": [
										{
											"id": "0f95010d-1361-43ae-8d0d-602bbc3e979a",
											"key": "productId",
											"value": "cfdi",
											"type": "string"
										}
									]
								},
								"description": "Get product configuration"
							},
							"response": [
								{
									"id": "d38e6ab2-6f3c-420f-aded-0d93e747c868",
									"name": "Rerieve br_nfe product group configuration",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{tf.bff.url}}/api/v1/products?productGroup=br_nfe",
											"host": [
												"{{tf.bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "productGroup",
													"value": "br_nfe"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\r\n  \"success\": \"true\",\r\n  \"status\": \"200\",\r\n  \"message\": \"Product configuration listed\",\r\n  \"timestamp\": \"1581349440\",\r\n  \"data\": {\r\n    \"product\": {\r\n      \"productGroup\": \"br_nfe\",\r\n      \"country\": \"BR\",\r\n      \"documentTypes\": [\r\n        {\r\n          \"documentType\": \"nfe\",\r\n          \"namespaces\": [\r\n            {\r\n              \"prefix\": \"\",\r\n              \"uri\": \"http://www.portalfiscal.inf.br/nfe\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"mappings\": [\r\n        {\r\n          \"section\": {\r\n            \"name\": \"overview\",\r\n            \"parentProperty\": \"header\"\r\n          },\r\n          \"properties\": [\r\n            {\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Database location\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"radiobutton\",\r\n                    \"options\": [\r\n                      \"Current\",\r\n                      \"Historical\"\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Creation Date\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"DatePickerRange\",\r\n                    \"format\": \"dd/MM/yyyy\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar1\",\r\n                \"key\": true\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"CNPJ Emitente\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"table\": {\r\n                    \"label\": \"CNPJ Emitente\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar2\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Nome Emitente\",\r\n                  \"displayAsColumn\": true,\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"middle\": {\r\n                    \"label\": \"Nome Emitente\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar3\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"CPF/CNPJ Destinatário\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"table\": {\r\n                    \"label\": \"CPF/CNPJ Destinatário\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar4\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Nome Destinatário\",\r\n                  \"displayAsColumn\": true,\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"middle\": {\r\n                    \"label\": \"Nome Destinatário\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar9\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Campo Extra\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagInt1\",\r\n                \"key\": true\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Série\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\",\r\n                    \"format\": \"F0\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Série\",\r\n                    \"displayAsTitle\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagInt2\",\r\n                \"key\": true\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Num NF\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"TextRange\",\r\n                    \"format\": \"F0\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Num NF\",\r\n                    \"displayAsTitle\": true,\r\n                    \"displayAsBreadCrumb\": true,\r\n                    \"concatenateSymbol\": \"#\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagInt4\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Tipo Emissão\",\r\n                  \"displayAsColumn\": true,\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagDate1\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Data Emissão\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"DatePickerRange\",\r\n                    \"format\": \"dd/MM/yyyy\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Data Emissão\",\r\n                    \"displayAsSubTitle\": true,\r\n                    \"iconName\": \"\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagDate2\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Data Entrada\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"DatePickerRange\",\r\n                    \"format\": \"dd/MM/yyyy\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagFloat1\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Total NF\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"TextRange\",\r\n                    \"format\": \"F2\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Total NF\",\r\n                    \"displayAsSubTitle\": true,\r\n                    \"iconName\": \"\",\r\n                    \"concatenateSymbol\": \"\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"StatusDescription\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Status\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"Dropdown\",\r\n                    \"options\": [\r\n                      \"\"\r\n                    ]\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Status\",\r\n                    \"displayAsSubTitle\": true,\r\n                    \"iconName\": \"\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar10\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Chave de Acesso\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"filterType\": \"text\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"table\": {\r\n                    \"label\": \"Chave de Acesso\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
								}
							]
						},
						{
							"name": "404 - Product configuration with Invalid productId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "95afbdbb-1482-4814-9005-0ce9674acf1d",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Not Found\");",
											"     pm.expect(pm.response.text()).to.include(\"Item not Found\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8d3fb1fd-49e5-42a5-b35e-4db7247adb07",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic c3lzdGVtOnN5c3RlbQ==",
										"type": "text",
										"disabled": true
									},
									{
										"key": "x-mock-response-code",
										"value": "404",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/products/:productId",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										":productId"
									],
									"variable": [
										{
											"id": "030934fd-8cc9-41e2-8fd0-6078dd560a82",
											"key": "productId",
											"value": "banana",
											"type": "string"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "401 - Invalid Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8bf999c4-e6ba-4508-b85c-829893b2ce99",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Check status code from body\", function () {",
											"    pm.expect(jsonData.status).to.eql(401);",
											"});",
											"",
											"pm.test(\"Check Message from Body\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"Invalid credentials\");",
											"});",
											"",
											"pm.test(\"Success should be false\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"false\");",
											"});",
											"",
											"pm.test(\"Checking response mandatory nodes\", function () {",
											"    if (jsonData.success == \"true\"){",
											"        pm.test(\"data node and timestamp exists\", function () {",
											"            pm.expect(jsonData).to.have.property('data');",
											"            pm.expect(jsonData).to.have.property(timestamp);",
											"        });",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6375feba-0b92-4206-acec-9be231fd5295",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"username": "invalid",
										"password": "syasdsdstem"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic dHJ1c3RmaWxlczpUcnVzdGZpbGVzMTIz",
										"type": "text",
										"disabled": true
									},
									{
										"key": "x-mock-response-code",
										"value": "404",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/products/:productId",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"products",
										":productId"
									],
									"variable": [
										{
											"id": "9da51bb2-5143-4575-9c8a-ad997d7bced7",
											"key": "productId",
											"value": "ide",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "5e90e41d-96dc-497e-a0f0-3d5acb2537e6",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2bdba65a-3015-4de3-b9f7-9f26fbfa4ad1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6de6298a-2205-491c-ade8-a1fcc074fc31",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"id": "520f11fa-e7e3-4c47-a6c0-288c5ccd3ee6"
		},
		{
			"name": "ACTIONS API",
			"item": [
				{
					"name": "BRAZIL",
					"item": [
						{
							"name": "MULTIPLE ACTIONS",
							"item": [
								{
									"name": "202 - Multiple Actions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "42e2c59c-6d99-4736-841f-3cc8c8ab9ce7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5497fa92-fc1b-42d1-b741-5c8387a12b3f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "dffe8deb-7219-46d9-ad1b-01159e678fb0",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "207 - Multiple Actions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9a8e803c-f9db-485e-a751-62443185bb3b",
												"exec": [
													"pm.test(\"Status code is 207\", function () {",
													"    pm.response.to.have.status(207);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "7be9337c-0d22-4a58-8a8b-d00782b190bd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-a2905ce99963\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "083845ff-d653-4247-8970-a6766128d265",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "404 - Multiple Actions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a860099-370f-4599-9a45-48addaeec903",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "10c893c8-0376-4618-9563-0145b30bfae3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"2596f357-2c9b-1b8a-8391-af905ce99963\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-428a-8391-af905ce99963\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-a2905ce99963\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "ef3bcab2-7462-45af-b1da-6671d8ec7694",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Multiple Actions with one empty documentId",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff2d2d21-c488-47ca-9307-ac69e2e82d47",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "cd26c228-2310-46e9-a7f7-a5570f0549c0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    },\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "bcbcc979-2523-4236-99b8-29a667913911",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "207 - Multiple Action with more values on metadata than expected",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a87a14be-f073-4a49-9109-8ab794eab2ae",
												"exec": [
													"pm.test(\"Status code is 207\", function () {\r",
													"    pm.response.to.have.status(207);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "83fe806d-42bf-4fed-abfe-82c81fc6610c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"actionCode\": \"document.distribute\",\r\n  \"documents\": [\r\n    {\r\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\r\n      \"metadata\": {\r\n        \"email\": \"giulliano.gianelli@sovos.com\"\r\n      }\r\n    },\r\n    {\r\n      \"documentId\": \"55086fe9-0db9-46e1-b778-f61ec992b54e\",\r\n      \"metadata\": {\r\n        \"email\": \"giulliano.gianelli@sovos.com\"\r\n      }\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"variable": [
												{
													"id": "8d24005a-218e-4c66-8117-2ce875c3c4ba",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "207 - Multiple Action with less values on metadata than expected",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aa4ead1f-e8a0-473e-8cc8-90c3b95fc12c",
												"exec": [
													"pm.test(\"Status code is 207\", function () {\r",
													"    pm.response.to.have.status(207);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5dd67555-b594-4015-9bbd-0f4d66b5e2e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"actionCode\": \"document.distribute\",\r\n  \"documents\": [\r\n    {\r\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\r\n      \"metadata\": {\r\n        \"email\": \"giulliano.gianelli@sovos.com\"\r\n      }\r\n    },\r\n    {\r\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\"\r\n    },\r\n    {\r\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\"\r\n    }\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"variable": [
												{
													"id": "12837538-90dd-4e9f-80e1-fc4035b88d93",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "7dbf66d5-942a-4bdd-b309-020493271a47"
						},
						{
							"name": "Type NFE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b91c81e4-53e9-4830-b1d7-980cac6c2616",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "de79421c-0d10-4762-92da-4c97f6d3f3e7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "359fa6eb-c145-4e04-ad6c-06cd83872fe6",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36833565-9211-459e-9f4e-e03033a52978",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cbce4067-24b0-4fa1-902e-8e5e4ccc481f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8b9a05f7-03f7-4ab5-acda-e74141919fc9",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4bb290b3-646b-401a-ae9b-2b16cf389d9d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3ddf659c-f98c-4b80-a32c-3e9ced199da7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"af0559e2-0509-41e4-a697-5ebc7bd794ed\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "45855339-2cfe-4b60-ad2f-3522101e0448",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "485333b4-efe6-41ca-aba9-e1a35e82ac45",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4b328cc5-6522-4396-ad62-6e0be21237ca",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8522d1b8-cf0e-42cf-bb8b-db74c6a33e39",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Confirmação da Operação\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f01e782d-10ab-4401-9516-52edbf1beacb",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "89f80051-470c-40cd-9bf7-813d28d28371",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.confirmOperation\",\n  \"documents\": [\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d4462594-bea5-4050-9841-07b5b6e1cff8",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Operação não Realizada\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "79a019b7-458b-4f8f-b447-02eaad38ce35",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a5a2ceaa-4016-4ff3-a8ea-607f6e93d09a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.notPerformedOperation\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\n      \"metadata\": {\n        \"reason\": \"Operação não Realizada\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "3b791851-6fd3-425e-b3c6-e77da889a1cd",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Desconhecimento da Operação\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a774af39-319f-4965-b14d-c61fe647681a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e518a1fa-e4c0-47cf-b432-93bfc29108f2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.unknownOperation\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\n      \"metadata\": {\n        \"reason\": \"Desconhecimento da Operação\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "74efbb00-b9f0-439c-8dfb-7d19e1915fce",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Ciência da Operação\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9dc17a9c-d439-45e7-b763-c90ab8ec45fb",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "680b3edb-710e-4d0b-97be-58b181e96b07",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.acknowledgeOperation\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8feb7d5a-3e22-404b-8e7d-512c3a8c5ea0",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7b04a09d-01d3-4061-b967-5124e1900080",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0e1c7d65-2164-4f12-a9b2-1bbeaf8f34b1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"2596f357-2c9b-4b8a-8391-af905ce99963\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "708377ee-5fdc-4593-b408-4641ae1ee8e5",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Cancelar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "83a05430-6ff3-413c-8b6a-97e0f4a0bafc",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3afb659f-1ae2-4b29-9a5f-a9e715ba6bc3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.cancellation\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\",\n      \"metadata\": {\n        \"reason\": \"razão do cancelamento\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "fc3dddf1-139d-4525-a2bc-fbed7a8a32bb",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Cancelamento de Prorrogação ICMS\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c37e76e7-de5b-423f-965a-423d8d325b05",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "50a50a99-89c6-41dc-a3f6-dcc17d2b3fcc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.icmsExtensionCancellation\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\",\n      \"metadata\": {\n        \"reason\": \"cancelamento prorrogação ICMS\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e5fd076b-3070-4e45-9657-03271a010ffa",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Pedido de prorrogação ICMS\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0a3764f6-3d26-4c8e-93fe-06817cf4eaa1",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "50c2a1a1-0e15-4000-bce1-55781f7c4c3e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.icmsExtensionRequest\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\",\n      \"metadata\": {\n        \"reason\": \"pedido icms!\",\n        \"item\": \"item desc\",\n        \"amount\": \"2\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "28e3421c-d873-4a7a-a2a5-d78802bff0a0",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Carta de Correção\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "84591178-b6e4-4a54-bfbb-524b5231172c",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "8ad9ea08-2ee5-4744-9b17-553d899f2f5a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.correction\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\",\n      \"metadata\": {\n        \"reason\": \"razão da carta de correção\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "306274da-6b2a-4046-a7de-4b396ddceb3e",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc7009e4-fc0f-4791-bf99-911f17f0c479",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "93450720-fbeb-40cc-9704-5206e9302b9d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "35197491-9437-4477-a8d6-fa6f50c0a7eb",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86cce65c-d34f-4567-9db5-350f1a2ff024",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "b30fefcc-d142-43d0-ab1f-e7d5e5ee0592",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5c919401-8368-4887-a1f4-f351b6a8eaa2",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1f3316f2-08b1-4386-8d2b-9a27ad9b7cdc",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "8a770c54-a902-4408-9bba-d7422240f3b2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"1ecfa658-9f16-49a1-9e65-b0b8700833b9\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "92afc738-4f0d-49c3-89e1-8b8983f54a29",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aed274a2-3472-4012-835d-e3e855e40536",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3296f9c6-2e0e-400c-b5db-d313bbfccc57",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a8e83156-2225-4184-9c62-07dd399acca9",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "7cb61a0d-fc3e-4ec6-be88-acd3e908d770"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "401 - Invalid Credentials",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33e17101-aab4-4e52-b099-744cf6813a7a",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "252ed67b-b6d5-4331-8e53-e16c5d8e5ce8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "basic",
													"basic": {
														"password": "Trustfiles1234",
														"username": "invalid"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "10c2c525-4a62-41c9-b880-bd4b04fcdb87",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "404 - Document not found to execute action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5a3f080e-ccf7-46f9-80bb-8f04890e5bcd",
														"exec": [
															"pm.test(\"Status code is 404\", function () {\r",
															"    pm.response.to.have.status(404);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Not Found\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e7480ebe-5b3b-420f-bead-53bf77433ad7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99359\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "75b491b6-0295-4dc3-918a-b1b6a870b0b1",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action without documentId filled",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "78b44fe7-d252-4b37-ada7-500c8d79f23f",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1a247b55-ab78-4dbb-b196-3c4eb7169cb4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "56a71d53-0273-4527-8acb-539caf2393b9",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action without action code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7cb77fec-3a5f-4c07-ad68-638c0b05c798",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Action not provided.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2a73835c-1550-472a-bd43-8c0a87415e98",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "35bd3d00-8cdb-49e1-8a98-4c608dc5b9be",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action with invalid documentId",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "700e817f-1577-4ea2-95c5-b6dd693d72c6",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f86050e5-7321-4a38-8926-aabed8836535",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a9935x\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d5e231a0-6dc9-4a2b-b802-857047204e8e",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action with empty action code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39810bd8-5fb7-4401-8f86-61bb0cd63a54",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Action not provided.\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d343c690-b441-4a9d-a9c4-f8cd755305e3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "7be6c64f-32af-4eaf-9c08-fa0c656624fc",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action without documentId node",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9a6fb5aa-c7ac-46cb-9d0c-73dbe590a876",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0a56e629-c8e1-4bbd-b8e6-f30f3455dc82",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "3e1e118f-7418-4e4d-bae4-85bbf6a564a4",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action with wrong action code",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d06e31c8-60a2-410a-95d1-f6ab473c24e3",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Not all Action necessary parameters were provided\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "215559d7-c3ed-4e0f-ba51-db57f506e6f2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.xxx\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "fde91244-3f85-44ae-8328-469cfa49a482",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action with empty metadata",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae0f7038-9ac2-4104-becb-72e0d328517d",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Not all Action necessary parameters were provided\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "435c0e38-b5e4-442c-b610-ac917bab5586",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\n      \"metadata\": {\n\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f79473b5-d5a2-430f-9fc3-d5a4c466ec28",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Action with invalid metadata",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14ec7166-a186-4213-af5f-9db1048f9423",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Body matches string\", function () {\r",
															"    pm.expect(pm.response.text()).to.include(\"Not all Action necessary parameters were provided\");\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "14e35ebe-94b6-4156-ae1c-310887f4aace",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\n      \"metadata\": {\n        \"batata\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6bb520ea-2a57-481b-91d6-a9f991d4d47e",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "2345a685-1e0a-421c-98e5-addae08baa4f"
								}
							],
							"id": "03adf818-5b4f-4706-ade4-1c6b50bfa4d7"
						},
						{
							"name": "Type NFSE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "035a25a1-8cf3-42a5-8f45-80ad6a399a2d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5498aa4c-cb60-4ebd-a96c-a62a129e6402",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"854b3f55-5ead-4777-9a51-54cbcc2ad2fa\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "eec3a5bf-bf51-4160-90a8-b2fb9cbe278e",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8164c1c4-aa0d-4546-8dfa-f16332f9ad1a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a676d3f4-9293-473f-a922-9e8739aef428",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"854b3f55-5ead-4777-9a51-54cbcc2ad2fa\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "84d58324-f52b-42a7-9b32-061f2af5c9b1",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f1fd86fd-857e-416c-a046-cb24bf9520e7",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c68c643a-39d4-422f-a4e5-cfa87abc3653",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"854b3f55-5ead-4777-9a51-54cbcc2ad2fa\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "33ef6c2d-498a-4b73-a634-0b709ee37c61",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d33208a9-5611-4632-bcd5-bd1ec48545da",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d7f3e1a6-e0ab-46fa-b893-677b6a0dc656",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"a67010f0-e3c1-41ca-a322-5283fa60a17b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "7782dd4e-0a43-44ad-abd0-7191b64a394d",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "789d601f-cdd8-4ca2-832e-3907000b71e7",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c96e512b-68ee-489a-8179-5bb5a34af4c8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"a67010f0-e3c1-41ca-a322-5283fa60a17b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1198fa6d-3bcb-4fce-8565-b005e65d29c5",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2420a8c3-5218-4f62-aff8-51c382350e9e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a194bb02-8c1e-45be-85d1-4b3c7d86d1f6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"a67010f0-e3c1-41ca-a322-5283fa60a17b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "2cfcc34b-b386-4b24-8fbe-9e2d22718a60",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d17fdf8-4893-4a2b-ae9d-90b18cfb6e9a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "978ae6fc-2071-4af9-afb9-863de315f15a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"a67010f0-e3c1-41ca-a322-5283fa60a17b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e749f1e1-c456-45b4-9c5b-408f7edcd530",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "237a0ca5-b7f0-4f7d-9733-d906a7c8e067",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "763ee4fe-ed21-47e3-82ce-f047abaa3e29",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"a67010f0-e3c1-41ca-a322-5283fa60a17b\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "265b1868-e604-4b2a-8a73-b20932ba263c",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Checar Status da RPS\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a11024c7-f4ac-4df5-b4d8-f5162cc764a8",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "b5edf401-a1df-4b5c-b276-03f0fc4e5340",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"a67010f0-e3c1-41ca-a322-5283fa60a17b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1d7459f0-495a-4fbc-a8a6-0f395b63e511",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Informar Numero NFSE\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2cb87039-1ffd-42f9-9762-b75d9061e843",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fa6ad3e2-45df-4169-b2c0-49782787a4bc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.createDocument\",\n  \"documents\": [\n    {\n      \"documentId\": \"74d1bb96-feb2-4880-a2bf-01634fb2ad30\",\n      \"metadata\": {\n        \"authorizationCode\": \"1234567891\",\n        \"invoiceNumber\": \"123\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d87bb523-b0c5-4bad-9298-bd781dbd1528",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar Lote\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b06411b-9648-4079-8a16-83a8f4594211",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ee2c4fe1-cc92-4961-89f6-ce92e267bf43",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.generateBatch\",\n  \"documents\": [\n    {\n      \"documentId\": \"2dd1b7c4-0f15-4d8d-be3d-61e81d9f948d\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "04c6ecd2-ed5a-4390-b546-255fd1ff0d9f",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Cancelar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "936f997e-778f-45a1-ba5e-87398e50528a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "48815c14-42f5-4291-a731-9360c41571de",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.cancellation\",\n  \"documents\": [\n    {\n      \"documentId\": \"a67010f0-e3c1-41ca-a322-5283fa60a17b\",\n      \"metadata\": {\n        \"reason\": \"razão do cancelamento\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "7b1e8ed7-55f3-4dc0-81dd-4aa7ffa245cb",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "0f6b75b9-d25c-4c6c-a19a-e1b943ee2fa3"
								}
							],
							"id": "7667cea0-3e3f-4472-9731-89d981084553"
						},
						{
							"name": "Type CTE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d4cac29-5cb2-4545-936c-681afd9dab02",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "24db2cb8-b6a5-4bc8-bc33-23c65da6fb6a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"90d5654b-45c9-47ea-b541-1561b15e5235\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "00864e3f-6d5d-4c53-898b-544fefc1d26c",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "76904cdb-006a-4d09-b9d9-3a0f939429eb",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "63d82f6a-45d9-41c6-a42a-5f0dc7ff5fd6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"90d5654b-45c9-47ea-b541-1561b15e5235\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "72a9125f-de80-4250-9b66-eae157a099d4",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5e11e0f3-9488-4429-90c0-fafa263beeef",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a69150ae-91b1-4760-a349-b74958f276c5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"90d5654b-45c9-47ea-b541-1561b15e5235\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8b38e6a1-23df-4099-8b2a-a18ed42bf32f",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "39c2813e-a5ee-427f-af98-89e042f3046a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "08ba2d7c-e165-4001-b1ba-145214d891f4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"90d5654b-45c9-47ea-b541-1561b15e5235\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a2f9a8e5-58ce-46f1-a589-b0e8eb3619ea",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Desacordo Justificado\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9fca405e-b106-49dc-b9fa-9a8d2721cd0d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "250e604f-6ee9-49ae-a341-7620508d8d75",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"br.document.disagreement\",\n  \"documents\": [\n    {\n      \"documentId\": \"90d5654b-45c9-47ea-b541-1561b15e5235\",\n      \"metadata\": {\n        \"reason\": \"teste1\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "bbead961-f9bb-4dfe-ab84-f4be43b1e7ba",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "89870c02-7c79-40c4-a3c8-ca3045dcf0bb"
								}
							],
							"id": "4d2dde59-d1a0-4086-90c3-ee6252809f0a"
						},
						{
							"name": "Type CTEOS",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "80b92612-0723-496f-ac6e-055ad5f9328e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7fbd730e-424f-4c21-84c2-60166a2d7dd4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"c8e3f0c0-79ad-4cb9-b524-7161ba08bf5b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "951feaf1-c49f-4791-8745-1525cd3a12e3",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e3a09609-218d-4fd4-a10b-1383389352c8",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "dd19a684-9a3e-474c-9b68-3ef45a097fa4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"c8e3f0c0-79ad-4cb9-b524-7161ba08bf5b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5bc66869-15ff-40e7-8ba2-b96e0367e710",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "adcb327c-7f13-4388-8dc4-0c752cfee1ea",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "36cc68af-41c3-4815-ae86-0ee0ea54cf3e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"c8e3f0c0-79ad-4cb9-b524-7161ba08bf5b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4c21c8c8-70b6-4dc9-a1e1-95d9db51eb7d",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99d6cfad-0d1d-4065-8bb1-153c4364d9d4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "09899a06-489a-4536-9a1b-8a985566b4af",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"99c36904-6aa3-4289-9bf2-cf3a9533f743\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1fd9a960-c48a-4cde-8e10-dc3f52760ad9",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "6f7bdc0a-c2f7-4a77-8f35-e8dcafd8c110"
								}
							],
							"id": "89c8954a-4c35-49bb-994a-6990aa1c7677"
						}
					],
					"id": "0e166fc7-baf4-47d2-94d9-9173bfe0e144"
				},
				{
					"name": "ECUADOR",
					"item": [
						{
							"name": "Type facturaEC",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Resultado Comercial Envio de Recibo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "97c1925d-d0c4-4d9d-943f-18def41062be",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5102e3fe-381e-4273-a73c-4a801ffec543",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"ec.documento.commercialResultsAknowledge\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"reason\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "0249c3c4-aa2c-4f2f-8226-d2ce05750f48",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7862ed53-6b66-4b1c-8ad4-cc8073c0ab8c",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "76a14406-15fa-4672-ad13-444da4301341",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"ec.documento.supplierRejection\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"comment\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "544e6c7b-5945-44a3-9ece-81c968acfb71",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7529e158-bdfc-4f7b-846d-f8d166eaf43d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "b021866b-da75-422a-8cad-81118e7c146b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"ec.documento.supplierAcceptance\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "108a92c8-b179-4f5a-8614-27161758dc8e",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Respuestas Intercambio Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "973d3558-192d-4530-834b-fa14fb35220f",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "32aa7a99-2fc3-464b-8542-0a2735400cdd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ec.documento.exchangeRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"reason\": \"Respuesta Intercambio Rechazar\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "cdcc0db3-09ab-4929-bd1e-61e87fd5590f",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Respuestas Intercambio Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0fe10d08-7230-4560-bd19-de79ea0d99c5",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "17622f39-04c7-4bbb-9cb8-8929d2fb2a2d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ec.documento.exchangeAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"invoiceNumber\": \"000000008\",\n        \"status\": \"OK\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a6af67fd-198a-4a7d-9e88-f13edcc9643f",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Re-validar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1e482770-ccf8-49f5-b40a-9d5c1e9388cd",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "80899c74-4418-470e-92c7-87d6ff867d40",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.validation\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "96c774b4-a1ba-4e94-aabd-bc62de66d113",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5027ed5-a845-4fd7-9030-8b2f5490c0a2",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e86091c4-c8d1-4972-873a-a660e2a26d93",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"4939a3a2-d785-4491-bdc5-d235f9c4f523\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "69e4fe4c-88b8-40a4-9934-63eea2142002",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "36703a0b-8648-48bf-a0ab-cf1cf771dadc",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "afee4c4b-5a86-44a3-bdf4-8e7346ddb9bb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"4939a3a2-d785-4491-bdc5-d235f9c4f523\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4383cce2-4ddf-4418-9b57-edf066f2f48b",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f09307a9-9d7f-48ad-af7c-c4450b44286e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "dc44ab64-9986-4e13-9271-b79c34bdc4b6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"4939a3a2-d785-4491-bdc5-d235f9c4f523\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "56eb5db1-f924-4182-bcbc-a7759a46cd77",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f8a210e4-c62e-407a-a6ad-3ecdf5861b23",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "eb80f460-791f-4f32-aaf9-58eff9f45c9d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"4939a3a2-d785-4491-bdc5-d235f9c4f523\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "617a884c-84f1-4610-9d6e-bd442aa5e8cf",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71e27b0a-3a40-4237-bdb6-d4e34856453b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cc0c020d-6044-47c1-93e2-51d4b7c514ed",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"4939a3a2-d785-4491-bdc5-d235f9c4f523\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f8608edd-b968-4e8c-b971-6376e4d7bc83",
															"key": "countryCode",
															"value": "ec",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "703685a6-0beb-414f-90e1-ef8e810e7c7d"
								}
							],
							"id": "e0941d8d-b14c-4942-92c8-278e1dda91b9",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09bacb59-ea68-48b0-82d5-be7e90c33778",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4778728b-5054-46e3-a571-31fed890f8e9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"id": "b53d98e9-d9ec-40aa-ab14-5078d43ca010"
				},
				{
					"name": "PERU",
					"item": [
						{
							"name": "Type PER_FAC",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Resultado Comercial Envio de Recibo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6228eef3-2e94-4cf9-8e44-13294f1145f0",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "89aada0f-8116-40be-b8f3-bb64bfc1515d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.commercialResultsAknowledge\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"comment\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "83df5bc8-4a50-4dde-a034-0b27d9c17748",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "23c48ae9-d8af-4f80-9ea2-6a8591826f53",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fac97101-e802-49eb-8810-ccf7e52eed56",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierRejection\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"reason\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9ae5d865-3420-4919-8bb7-c960121086b3",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4b6c30a0-81a1-435c-977a-4d123bf9d99e",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29bcb9d9-9ed2-464e-a1c8-3ef028819a85",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierAcceptance\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e5f60604-fcfd-432e-ab9c-4909ddc59b50",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1c0eb7f-3311-4999-aa6c-65fd7892ed0c",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// // });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "925bbaa3-e30e-4ae0-8056-6d229e604166",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"pr.document.Rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"reason\": \"Rechazar Action Test\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "26eb3d0e-bb14-44bd-a887-e30778747a36",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6817be92-f5d3-47cc-a78d-8492a12a4518",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6b2e8d44-5b59-4a94-9aed-6f85cc0be0f6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"pr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"invoiceNumber\": \"00000000\",\n        \"status\": \"OK\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9adfa0b3-451d-4618-9ae4-1ed48e19fcfc",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d890000-5dd1-48eb-958b-5a7fb69063fc",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "addd7c6f-b0ec-42ea-9943-31310722785a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"1b78a8ed-66c5-4331-82bb-2168ff9213b5\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e8b6f00c-5d5c-4692-8491-e053a8df4004",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ea3fc574-e746-4e05-9fcc-3338204ef1ac",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4fc2889a-4269-4540-9954-51655431d860",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"1b78a8ed-66c5-4331-82bb-2168ff9213b5\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "08d35197-09b5-422f-a70d-0c5cda07df14",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae1488b8-7729-42e6-81d2-990f63c31d43",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f2610767-9fd9-4509-9569-77c9c0880f66",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"1b78a8ed-66c5-4331-82bb-2168ff9213b5\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "69787f89-7fdd-4110-8425-a1d235d8940e",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d54b43b2-b59b-4254-8785-ee6a2f36bfa4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "32c4b5cf-a015-4fda-959a-bd43ff8a95ec",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"1b78a8ed-66c5-4331-82bb-2168ff9213b5\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "bdc47e88-bb8c-4e24-9851-42d051e9cc4a",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "daf2a7a1-4bca-4131-b4ea-72c492dc818f",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "483390a7-acd1-45fc-b20f-a39a05d7b33f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"1b78a8ed-66c5-4331-82bb-2168ff9213b5\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e8be53f9-e8d3-49ee-8f81-ba904311c88a",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"ReConsultar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7d38bd26-2122-4f33-90f7-edc48df3e6a2",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "9e2d8946-4c55-494f-95a5-49b0a449d9b9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"1b78a8ed-66c5-4331-82bb-2168ff9213b5\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "78650e53-555c-41be-be52-0e9efb164a53",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "4ff0ad85-2874-43c8-9bc4-fd6b00e0f38f"
								}
							],
							"id": "154ac61c-e817-4162-bad6-b1f7ec2a557f",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3a64349f-5abf-40be-a8ea-52f76acfd592",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6ed8581b-e67b-42fb-9b85-ed3cd8c3cf37",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type PER_CRED",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Resultado Comercial Envio de Recibo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3a8d85d8-b0f0-4b64-a294-8f69f1636cc2",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "26f0488d-5ea4-4043-a047-196df5f291a6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.commercialResultsAknowledge\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"comment\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c1829024-876b-4dca-8769-2fa1761e090f",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d6fd1cd3-a600-4534-ae59-7e12d7ce347d",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "70eb55bd-da57-4e4f-9a46-bdc5a17cbffc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierRejection\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"reason\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "0f36e469-fd7b-441e-95a3-eeb94ed37f85",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26144fa0-ed74-4ce9-8e62-e180168c6318",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "baa03399-6697-4e12-89dd-04d89d74d72d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierAcceptance\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "02cf7f51-c5c4-42d3-92cd-c5e835d91ba3",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "32bb31dd-6e6e-48f3-b2d2-cec96aa02958",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1bb3e17a-1f06-4e59-a494-887c136574af",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "// {\n//   \"actionCode\": \"pr.document.Rejection\",\n//   \"documents\": [\n//     {\n//       \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n//       \"metadata\": {\n//         \"email\": \"tayna.blasques@sovos.com\",\n//         \"reason\": \"Rechazar Action Test\"\n//       }\n//     }\n//   ]\n// }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d6d98c94-e2d9-4386-aeea-28ec16ef4264",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "075c1127-7b21-481f-9607-815af0d8da67",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "49f5b639-ec26-427c-baef-ebf00a4e4c8c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"pr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"invoiceNumber\": \"00000000\",\n        \"status\": \"OK\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5cdd2eb5-8ce2-420e-92e9-46296bcc5fda",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ae3983eb-428f-4773-84cc-7a6b3841ee6f",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c34d682d-7896-405d-84db-e3d7f0d9e33e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8c810-562d-4697-895b-7a88856e849b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "b17a61d3-fe88-4a05-b1d1-2837c2611fbb",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "614d7e08-e444-4e40-8fd2-c716720c3c74",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ea4fb226-8d27-4865-ae14-b9028073d752",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8c810-562d-4697-895b-7a88856e849b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f33c581a-cad4-4c49-8ce6-86c4b7e88440",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4d78d702-ebb1-45ca-b731-c4b362e8d3a0",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "83e693b3-8fb6-457f-9b1f-c9e8347f7179",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8c810-562d-4697-895b-7a88856e849b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6fa47707-d524-4b58-9946-52cf93d91f4e",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "632c33b5-d30b-4395-89ac-8a99faa25cbd",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1c61ecba-4f92-4ea9-a79d-8fa0528cd9f6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8c810-562d-4697-895b-7a88856e849b\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a740015a-1f47-462b-9817-6948f442d5db",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d8f65da6-378d-4e25-8da7-fe8793fcba51",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6fb079bd-8822-47a0-b409-28a153f1cde0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8c810-562d-4697-895b-7a88856e849b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "144571d5-71e4-404a-a3ff-1065a69741b2",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"ReConsultar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "672830c3-81e1-4037-8967-3bb2f2f61f33",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "89424bcc-2891-47a2-bdb2-30cf20569e66",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8c810-562d-4697-895b-7a88856e849b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "efdc270f-38f5-43d6-b739-98c7453d6a2a",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "4cb09210-c843-415b-b5a3-50b837458e47"
								}
							],
							"id": "02baaa3f-e930-4960-b4e7-68ad59ac4300",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8b969dd9-d807-4c92-b0b3-8b38afba0ffb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "20055690-7143-467a-9255-bbec77069e14",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type PER_DEB",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Resultado Comercial Envio de Recibo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "820d143e-3bf4-477d-962b-29ad1d082cfb",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d4377ef1-f492-4022-ac26-b6381bfc9e3a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.commercialResultsAknowledge\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"comment\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e8bda1fe-1567-48bf-a04a-1766e8a08d1a",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "80cf1328-f5f9-483b-88bd-546b43c9a025",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f2bd1e80-8b1b-4ad0-9dbb-0dcf1532d711",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierRejection\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"reason\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f06cf216-edb0-4e82-9281-8959ada448f2",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "10353a48-4e16-4541-a7dc-75bb0b6652ee",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"// // ",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "13cb11d6-8704-4a6a-90b7-f075336f3a80",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierAcceptance\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f7b79df6-44c5-4a99-802b-74c8128c8f40",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cc52d3e5-592e-4d66-bbad-932cd21eb45e",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fecc2775-1665-4f39-a702-3198d28470e2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"pr.document.Rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"reason\": \"Rechazar Action Test\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d60f324f-316e-4224-953a-47c5c8110e8c",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6da6231-7184-4936-89df-20bb6bea6645",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "127ce483-a61b-412f-b4da-c2b0b9f303f6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"pr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"invoiceNumber\": \"00000000\",\n        \"status\": \"OK\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e700de43-9e9b-4458-a0be-ec03f8a4abef",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dad66801-8dca-4039-934e-c618a1be8bdf",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d69a1f85-6ddb-4fb0-ae92-f79fde2f2720",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"9750be92-50e4-4b32-933a-46766519fd4f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "849a1264-eab9-43c3-9f52-6ed688733565",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e548f9d2-a421-4dbd-9f7b-f209f3f84b3b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "94777c1c-d0dd-4b27-8812-2b7fd20d9d57",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"9750be92-50e4-4b32-933a-46766519fd4f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8e7c812c-dcf6-4b20-9480-fdadd3d745f7",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5c54eb60-d46a-4331-b4d6-1667adb846c8",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4ac7c7d4-613e-42bd-abd7-eaa41faa7692",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"9750be92-50e4-4b32-933a-46766519fd4f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "19f18c03-f422-4941-81f7-2c8e944f1c49",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2434c3f9-e5a4-4655-9bcc-3aebc5d415f1",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "450fb366-413e-4121-8b37-a806f8a47be3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"9750be92-50e4-4b32-933a-46766519fd4f\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8f8d3506-cb68-4587-b0c9-c0a4985a1d96",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "060b6171-2904-403b-8d3d-fcad99272f0c",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f28f4d58-737b-4852-a548-5fce1c51b5f1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"9750be92-50e4-4b32-933a-46766519fd4f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "36e147c4-5061-4bfa-badc-0c820fdb255f",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"ReConsultar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9b327d40-f9ff-44da-830f-57bf91c06024",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5bb3bb94-af11-4698-a8de-b008e833e18d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"9750be92-50e4-4b32-933a-46766519fd4f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5cbff9b1-5b5c-4521-8d46-d17a67d17af9",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "e0f83fe3-1eea-4eeb-a4dd-0c60668324d7"
								}
							],
							"id": "9dc0689e-1acf-4a4a-98f4-c609961d53d5",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b44a9117-a6b3-4d97-9c1f-9e8607d22f70",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1f5df42c-ee98-4fb7-ad00-f6c2ecefd9ac",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type PER_BOL",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Resultado Comercial Envio de Recibo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a99d578f-6e0a-489e-b340-5ec104f2b7a8",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a6124ea2-6250-4960-a2cc-f23ddd56d594",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.commercialResultsAknowledge\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"comment\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e5df52be-722f-481d-b107-68f41d2d9396",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0693d3a4-0a01-460d-9e9b-ecb403da53eb",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d07edde2-2982-48c7-8589-9ea6b65395f4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierRejection\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\",\"reason\":\"1234567890\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "61c930ed-a262-4df8-af20-6f7b55ef7d8d",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eab2a8d3-537b-4e5a-a5c0-b19181f13d75",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// // });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7b9047db-4a65-4001-a131-2ad7a73a727e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\"actionCode\":\"pr.document.supplierAcceptance\",\"documents\":[{\"documentId\":\"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\"metadata\":{\"email\":\"tayna.blasques@sovos.com\"}}]}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6718f626-bdf8-4466-bddb-2264d75b70f6",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e0bcb789-cc40-4d36-b54d-2638aa70c25c",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f05e2d1c-c5fd-4462-aa28-ea5c1a6253e5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"pr.document.Rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"reason\": \"Rechazar Action Test\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "7d709611-c54d-4058-88fb-0ef5febf3fa9",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "df2af9ff-412a-48cf-9891-6e79b11f3014",
														"exec": [
															"// pm.test(\"Status code is 202\", function () {",
															"//     pm.response.to.have.status(202);",
															"// });",
															"",
															"// pm.test(\"Success should be true\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"true\");",
															"// });",
															"",
															"// pm.test(\"Body matches string\", function () {",
															"//     pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"// });"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7603265a-5553-4493-bc28-2bc9b7071424",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"pr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"10d8cf55-31d4-4ba5-a8a3-6a523d952924\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\",\n        \"invoiceNumber\": \"00000000\",\n        \"status\": \"OK\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4768ec62-0027-4363-b587-0c2cb5dbfe8b",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "57aedd09-9ac2-46ea-b46d-9c03f8996834",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c6ce41a3-a0e3-4147-a1cb-20e4b511b24e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"4b0ba937-d7bf-4df3-bf10-24477f94104d\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "bc9c9ba8-3ea1-4e59-88d2-bf297d84ace0",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bbac0f7a-4871-4a77-ad9c-6c33a6e7c31a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "67f1d554-e626-42df-bfac-4c6e63905980",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"4b0ba937-d7bf-4df3-bf10-24477f94104d\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6165c6ee-d85f-441d-b490-c8d43f446394",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2a85f037-59a3-498f-bbed-ae37526a9453",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5128a275-8ba7-4d83-b295-22f15ea9d056",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"4b0ba937-d7bf-4df3-bf10-24477f94104d\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "62412e6e-f25a-4c86-acb7-37c833f4d5be",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d5ec8e49-e5fc-41e5-8acb-ae255a6e1ae4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "83bd43a8-edc1-44ef-9559-7a63f665e5e4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"4b0ba937-d7bf-4df3-bf10-24477f94104d\",\n      \"metadata\": {\n        \"email\": \"tayna.blasques@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1137c6b9-92a4-439b-b40d-beda9eacbb55",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58023d74-baae-4435-9a20-1d26e88d1c39",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "99524f3f-e048-4fe5-9f6b-976b19087133",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"4b0ba937-d7bf-4df3-bf10-24477f94104d\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "92c52007-68fd-4b35-b3ef-a4c1a9b1f0dd",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"ReConsultar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "71462937-a35e-4605-bb59-0a9af334085c",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e51e27f9-2e13-4729-bdb6-de69b630ab50",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"4b0ba937-d7bf-4df3-bf10-24477f94104d\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "247d7844-e224-4380-a9d2-1f18f412ef3e",
															"key": "countryCode",
															"value": "pe",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "24085613-c95c-47a4-bb03-9eede23809be"
								}
							],
							"id": "ad234a3d-756a-44d9-8c46-9dbc310444fa",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e6fcdd4a-5089-48a3-9060-156c1e9e9b75",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d952a85e-f276-4b26-a33c-95a52f55d3f3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"id": "6bc88174-5cca-440b-9bef-f426527ca81c"
				},
				{
					"name": "URUGUAI",
					"item": [
						{
							"name": "Type CFE",
							"item": [
								{
									"name": "Inbound - \"Descarregar Retornos\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46140aae-e531-47e9-91f4-427f958198e3",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2aa44730-de7f-4c4d-9bf6-8cfac33e48ce",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"d62f9ad2-1175-468d-ba62-cf69941cca46\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "1975815f-72da-472f-b682-91c5da817a6d",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Inbound - \"Re-distribuir\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5b37ef64-070f-4b8d-8a67-10e4f468f91c",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ea5f81bc-9e00-4c16-8a0a-fb0556985c21",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d62f9ad2-1175-468d-ba62-cf69941cca46\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "e8520e0b-c291-4e48-9689-03198cdac6f5",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Inbound - \"Respuesta sobre aceptar\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c8f62e3-3fb6-4684-b765-37d367b885e3",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "dffe72a6-1214-48ed-8e05-2a295e227bbd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"ur.document.responseAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"d62f9ad2-1175-468d-ba62-cf69941cca46\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "150a6bfc-2825-4dbc-88ba-83b33f6421b3",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Inbound - \"Respuesta sobre rechazar\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8e7175bf-37d5-42f1-af68-cdf50a718d64",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "13f80b6d-d0ba-4975-888b-ab14ffc86fd0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"ur.document.responseRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"d62f9ad2-1175-468d-ba62-cf69941cca46\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"teste\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "7249af8b-0260-4458-9abb-d1893b373fd1",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Inbound - \"Acuse documento aceptar\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c65762ca-bd74-47bc-a4a5-23e2dc9a212f",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "711d8122-ace2-4c07-81b5-d5bfdc531c8c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"ur.document.accuseAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"d62f9ad2-1175-468d-ba62-cf69941cca46\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "4a927022-33b2-4a24-8c94-417a8b484b88",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Inbound - \"Acuse documento rechazar\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49a94126-cb84-4e06-a21e-f4c3a841361b",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "62ba7ba0-71c9-437f-84be-2e8bf6930162",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"ur.document.accuseRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"d62f9ad2-1175-468d-ba62-cf69941cca46\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"teste\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "421e5378-ee44-40bc-abea-94743a5630ca",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Re-Imprimir\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "86cf6fcb-b7c0-4c90-b404-d3fd041facf9",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "02d80194-8323-459d-a794-2752999363b5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"37772402-6360-4fc5-a1ad-4ac0afa62066\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "ea0487f2-021f-4f5a-97c9-cad55c4e9595",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Re Consultar\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab799b19-d436-45b8-a541-192d07b51c9b",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a917325d-84b2-4f11-b011-82ca59e65c37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"37772402-6360-4fc5-a1ad-4ac0afa62066\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "830a84f5-d625-4007-94a6-70b665a4527a",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Descarregar Retornos\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8b49261e-fb43-4352-8772-c369fe259a25",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "7bfc1ff3-5e5e-476a-b2c5-482d4714474f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"37772402-6360-4fc5-a1ad-4ac0afa62066\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "166fc3b5-f3f0-4815-8d4e-dc0a745595b6",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Gerar PDF\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b3d4fe17-6f3f-4d49-8363-7dd6ad108b41",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3e2a1b5c-5979-4683-9bc6-90d6021e6df1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"37772402-6360-4fc5-a1ad-4ac0afa62066\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "fbc47db5-6c53-4426-9104-363fa6731008",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Re-distribuir\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "afced8f8-3c1b-4e00-9e40-c41f36fedee1",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8f9ae78f-7d6f-4499-a7ca-c2fd8f92d55a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"37772402-6360-4fc5-a1ad-4ac0afa62066\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "3e7b20d7-9774-46aa-872a-2057d39118b1",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Data Reporto Diario\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "04d83368-8d96-4c94-a27e-184af3257108",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f78431ad-21fc-4112-b020-5a626706bbc8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"ur.document.changeReportDate\",\n  \"documents\": [\n    {\n      \"documentId\": \"37772402-6360-4fc5-a1ad-4ac0afa62066\",\n      \"metadata\": {\n        \"date\": \"12-12-2020\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "5aab0424-e1dd-4fa1-892c-13dc71da4d13",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Mesaje de anulacion\" Action Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "977d060d-a8e3-4b47-81e8-466456c7a725",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "aad01137-6d4d-48ac-9e88-93a707a8e3bd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"ur.document.cancelMessage\",\n  \"documents\": [\n    {\n      \"documentId\": \"37772402-6360-4fc5-a1ad-4ac0afa62066\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "78a30d9c-e9b1-4312-bc6d-740a1c8a22a3",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "48a81b41-621c-4a97-9869-208aeca64f53",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "27137d49-42aa-4d7e-9562-714165cda9df",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d25ebdf4-87c4-4509-8ea7-3fee79cb2481",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type Report Diario",
							"item": [
								{
									"name": "Outbound - \"Descarregar Retornos\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e1d4c6b5-3d56-4d15-a988-0ff758fd4392",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bf2316ae-3a5b-4060-afde-b66d10477c56",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"2d2bb9d4-66c9-4c1a-9123-9ad990f3dc85\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "36be5931-ef83-4f38-a27e-06c6a84a1a1d",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Gerar PDF\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "66ab45b6-e0e3-46b7-a742-039ece06cd31",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a9d558d0-ce29-4633-b204-c5b52e34529e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"2d2bb9d4-66c9-4c1a-9123-9ad990f3dc85\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "845667d6-e32b-4213-96f2-a1e4701b7f00",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Re-Imprimir\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0edc4f45-4916-4e41-951c-b5a4d171976c",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d9474344-9415-494e-bf55-872639dbb9da",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"2d2bb9d4-66c9-4c1a-9123-9ad990f3dc85\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "9facfa69-6880-412c-9fb5-d8f4c3c609ec",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Outbound - \"Re Enviar\" Action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bb0bee92-002e-4121-88e0-30a5072a461c",
												"exec": [
													"pm.test(\"Status code is 202\", function () {",
													"    pm.response.to.have.status(202);",
													"});",
													"",
													"pm.test(\"Success should be true\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"true\");",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f190c9e6-96d3-48c3-8261-df4b2b0eeba9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"2d2bb9d4-66c9-4c1a-9123-9ad990f3dc85\",\n       \"metadata\": {\n      \"nextSequence\": \"2\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "231f2e0c-3738-4ef3-9653-c006e4a4f4b4",
													"key": "countryCode",
													"value": "ur",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "c58996c3-57ad-4b31-94e5-e6e93f7fea0e",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ac3724bb-a5d1-4e8c-ab31-a9132389fbd3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d5f69774-dd06-4e34-b584-3cc43fa476db",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"id": "cec8c107-3397-4d29-93a0-f30097d3e7ca",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9821569b-ddfc-465d-9bcc-b2b9df232c95",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7b476f68-67a2-4121-90ff-54e1ca457d0f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "CHILE",
					"item": [
						{
							"name": "Type DTE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Re-validar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "90b43bab-4b51-4b4e-98e9-be3ce9d143d4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7f7712c2-c73f-4754-bc3b-ad4a87242906",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.validation\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "2344b21e-a8a2-4a42-b3a0-0ca2162fb748",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7eb09956-2cd7-429a-b7be-b8f9815985c9",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fe0e0b9e-a095-49bd-af64-be8b9b8152af",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4112b1de-c62a-4ce4-ae84-030968c221a6",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recepcion Envio Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c3dce640-2d65-4a8d-98fa-c7c6716daf03",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "bc6cff03-d4ec-4582-9ae2-e47d455d02d3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.shipmentAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"invoiceNumber\": \"1234567890\",\n        \"status\": \"0\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "0c353cae-6adc-45de-8301-ae8c6f299932",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recepcion Envio Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ee02e71-cab6-4650-a8f3-725c3bceb787",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5b41cde0-fd3c-49fb-ad9c-84fe78c9f31f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.shipmentRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"reason\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c099dd9a-67e3-42a4-945e-b3f30886505d",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Resultado DTE Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a7886a2a-02f9-4789-ac2f-903fbe86d70e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "b7ec2272-7fe6-4cc8-ad8f-861adcea576f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.resultAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"reason\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9b92d1bf-a1b1-46c5-95df-c76d09e2ee9c",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Resultado DTE Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c572cb25-16d7-4a28-b848-81879f178ce9",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a76521cf-b822-4388-8049-adb188538bc6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.resultRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"reason\",\n        \"action\": \"teste\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "997234b8-1607-425b-91a4-806594ee6fa5",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Envio de Recibo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "29bd6256-1c47-4041-a400-246bb8c32483",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "550573de-828d-4f93-ba3e-d4da723f3fa3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.supplierDistribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"comment\": \"comentário\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "7ae6e702-3c5a-4c94-ad96-5e5d1d09e699",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "31d57577-9f5c-42f0-9cc4-05c042383327",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0a403d95-3fa9-45d4-bd59-1c96f83de3ec",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.supplierRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"9fc6eda6-49a1-444e-a5ba-20fc999fc8f5\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"reason\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "cb4fcf8e-5fb7-478d-a981-6165d4169283",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b3b1756-ad7b-4c27-9db5-d771066635fe",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e53931f0-0d84-4c86-a2e6-32a948bc066e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"b9c57e42-d64a-4c7d-bd89-7b68f923c5de\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e56555d1-8bbe-4621-8ca3-89af44253b5e",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c8c3c9c2-deaf-4827-a21b-39dbe43e7c78",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4bf61bcd-b458-4046-bcbb-801e6831dea5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"b9c57e42-d64a-4c7d-bd89-7b68f923c5de\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "0f5b4993-daa6-46db-a3a2-9b5a30d5ab08",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0bf35e7e-6adc-41e9-8d0b-1d08a7d3fcac",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f02c72a7-6697-4a71-8d81-ae9fcd953f73",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"b9c57e42-d64a-4c7d-bd89-7b68f923c5de\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "baff7290-f3de-4de4-955e-14134c43d488",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6c631dd-ae47-4a4a-9ef7-b2a88a5bde5b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "aad2bf13-7a0f-4f92-b7bf-e6e437d81c37",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"0d931dc2-4a95-4916-a665-30d59486054a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1a4f64fe-3a56-4af6-a13b-d1b99114d85e",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "826cadab-0e75-4c8c-871d-fb8c79b5f6cd",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7fc2b8e7-2d4f-4ba2-a318-2a94b32a9dac",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"b9c57e42-d64a-4c7d-bd89-7b68f923c5de\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e06068b3-120b-4d00-9c34-4573484ba1ab",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Request Email Validation\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "439ea45a-bb7d-423c-981a-631f302142ec",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "59339b97-05f2-4046-808c-f1310694e8b7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.validate\",\n  \"documents\": [\n    {\n      \"documentId\": \"b9c57e42-d64a-4c7d-bd89-7b68f923c5de\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f1b2bd28-812d-4276-8667-05040b2c1700",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Criar Cesion Factura\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dbbde0bc-8e38-40cc-aee2-88151236aec4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e1908228-7dfa-4c7a-a983-7394ffcc7b61",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.assignment\",\n  \"documents\": [\n    {\n      \"documentId\": \"0d5f1b29-4388-4971-942c-d5b0b8ca29c8\",\n      \"metadata\": {\n        \"authorizerEmail\": \"giulliano.gianelli@sovos.com\",\n        \"authorizerTaxId\": \"0\",\n        \"authorizerName\": \"Giu\",\n        \"authorizerReason\": \"haaaaa\",\n        \"assigneeTaxId\": \"1\",\n        \"authorizerTaxName\": \"Tax name\",\n        \"assigneeEmail\": \"giulliano.gianelli@sovos.com\",\n        \"assigneeAddress\": \"Address\",\n        \"assigneeLastValidate\": \"01/10/2020\",\n        \"assigneeReason\": \"oooooooo\",\n        \"debtorEmail\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "85adaa90-d0f3-4a72-b133-d1e14e1463ea",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Update Track ID\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "86614868-ce57-47b9-afc2-c29503a999e4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "efabf0b2-6995-4c83-9671-f355ac6d6999",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cl.document.updateTrackId\",\n  \"documents\": [\n    {\n      \"documentId\": \"b9c57e42-d64a-4c7d-bd89-7b68f923c5de\",\n      \"metadata\": {\n        \"NewTrackId\": \"giulliano.gianelli@sovos.com\",\n        \"Timestamp\": \"2345678\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "79807460-2069-40e4-aaa1-91c787bd07fd",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "90d11f54-1fdb-4d3a-92a7-b37fdcf2137b"
								}
							],
							"id": "20f472e4-9567-43c5-bb1d-1f6aab03f894",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "834c8981-6b6b-42db-b481-95d3db2040e1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fb32163d-cb91-454c-9cd0-4df218a30689",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type LIBRO",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eb4bc328-04cf-4e89-8dfc-0d7bcb22fa27",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1a75b3b6-fbab-4ace-ac6c-910d4aa75e4b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"4e53a9ba-8462-4b90-8359-9fc0176660fb\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f6645b7f-01f9-4f86-8fe0-acd96c3f0083",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28ba9646-9a47-4024-9663-e845861aaf83",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "046de36f-3545-4e62-a823-48e50c36ef42",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"4e53a9ba-8462-4b90-8359-9fc0176660fb\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a5b20935-5fcf-4959-a3dd-30f383464235",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7f5d0a9b-1f65-49d0-b451-3a262975f3fd",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2f1f0097-9a80-4c95-8d68-42fc17813687",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"4e53a9ba-8462-4b90-8359-9fc0176660fb\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "06f31b25-aaf3-4c11-8311-7c57a0f3a261",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7490f7d3-0cb0-4367-882c-5a57a2ce6c78",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "be88fa12-538c-4d06-bd41-473d6642a982",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"4e53a9ba-8462-4b90-8359-9fc0176660fb\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "402f457c-aafb-4a12-ba59-1229e157fd85",
															"key": "countryCode",
															"value": "cl",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "42b74471-2b73-44e4-bf07-30e07d509c18"
								},
								{
									"name": "sap",
									"item": [],
									"id": "552acd61-a259-4f93-871a-484c23a9a772"
								}
							],
							"id": "84fe6f43-a5ec-4fdd-96dd-9bf8f0f01cba",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dcfca245-f533-4038-8f50-384e3c75a37f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5931ee81-e287-4ce6-9ebf-2c17fd26aca8",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "NEGATIVE",
							"item": [
								{
									"name": "401 - Invalid Credentials",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "01112afe-7470-4544-851d-6ede000cdef9",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3b27ab71-37f3-4831-aab2-ca1e00d3ff3e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": {
												"password": "Trustfiles1234",
												"username": "invalid"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99353\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "c0361ca4-40f1-4c50-bb45-7591691eec52",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "404 - Document not found to execute action",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9a533340-ba50-43c8-85b2-8fd0e2263a0b",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Not Found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bd7118e0-f184-4159-a403-3e1ae49d6e05",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a99359\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "cddf1f1d-6756-48a9-ac98-c8e1fe1bce61",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action without documentId filled",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6726a728-3fad-441b-b6e7-83bf64b9eec3",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3e62b809-bb3b-4534-ac23-b34d1267e9ef",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "98d6af59-d5da-4de2-93bb-1d6e8b6bdc6a",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action without action code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e1ffac30-331f-4a09-86db-4eaa083be665",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Action not provided.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "0bac229d-22de-4177-b449-3a3e3006c175",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "936cea44-7d27-4677-95de-94c41a1f2085",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action with invalid documentId",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f310082f-4351-4cbc-bb51-814003992f3c",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a425c268-c6d6-46b8-8d95-11b2c731047e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d281a583-79fe-475e-a3a8-981e57a9935x\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "22f8f1f1-e438-43c5-b1fb-45f4ad6c13ee",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action with empty action code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "baad3f23-00ee-40e4-9c5c-94dddefd502d",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Action not provided.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "12502db0-ed27-4938-bbc2-6f846fd51291",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "3e0815f5-940a-4756-9269-81143ba7db5c",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action without documentId node",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9e39b3ac-c870-43f4-8656-76ce95939ae3",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "96ab009e-7c6d-40ae-b2dd-848f49a1678d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "af5c384c-77c7-464e-a8d3-637675860b59",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action with wrong action code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67cc778f-3dac-43ca-9a3d-c38c02babe3b",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Not all Action necessary parameters were provided\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "82128022-caa8-4716-adb9-f1bdd13229ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.xxx\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "1967f370-6b1a-410c-9295-1ce1ea7554e1",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action with empty metadata",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d80e4560-85d7-4b7e-b3b6-4acd6562f14c",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Not all Action necessary parameters were provided\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "00b6b5c0-187c-41ae-bc2a-d3e3dc1097d1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\n      \"metadata\": {\n\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "c1a85c55-6ccc-4ae2-83f9-4c0cbf47ac0a",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "400 - Action with invalid metadata",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fd50dbcf-f4d9-44d7-9163-fa33c1577b6a",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Body matches string\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Not all Action necessary parameters were provided\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "47e156fe-b753-46e2-b2a7-fff9fb2f4cd9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bff.authorization}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"559afc9b-75d8-4ce3-b704-5a7b9fc50e24\",\n      \"metadata\": {\n        \"batata\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
											"host": [
												"{{bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents",
												":countryCode",
												"action"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"id": "82643388-9f3a-42d9-b601-2e4ca70581a9",
													"key": "countryCode",
													"value": "br",
													"type": "string"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "0eb81dd0-c931-4fdd-a357-aaf8b40a6505",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a9670f88-b34d-4d62-9c9a-f1a094a414da",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "616ed9a9-5b4f-4dfa-89d8-0810e68a491d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"id": "8c0bf42a-4428-4f6d-bc04-190d026f8549",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "521c3a58-3832-4b08-8894-f1ac26e8fcea",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9b676b79-3916-4e0d-b42f-61a5b51b4646",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "COSTA RICA",
					"item": [
						{
							"name": "Type CR_FE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d3a7698-f27a-44e3-bef1-acecdbc3b5f9",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2d140def-8f0c-436a-93a6-61389d1d4f02",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"9b410f54-b9e8-4589-a978-f02c2d29ec61\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "82c83322-07a8-43cf-a3de-30f06c764771",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "97a6f8f3-6548-459c-83c5-f79e99226c4b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "01172213-2a09-4d3c-b1b9-5cdda8b7a241",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"9b410f54-b9e8-4589-a978-f02c2d29ec61\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "92d45464-604d-41ca-9126-6ddedf6c63fe",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion Parcial\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0648aa0c-b249-48d5-a0aa-8f536165a1e5",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3c0c0506-1dfc-4dcd-bffb-1f2a0beabb3c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\n{\n  \"actionCode\": \"cr.document.partiallyAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"9b410f54-b9e8-4589-a978-f02c2d29ec61\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c5e84260-0d5b-48cd-b4f3-61d90714cce8",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ccb03548-fc04-4e06-8d27-3e4d25d15d03",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "127c22a2-a225-4814-a56d-c2f1bb2b631a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"9b410f54-b9e8-4589-a978-f02c2d29ec61\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8f0956c0-2dfb-4680-a6d7-4f94966d9d7a",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c2aa03e9-77ae-4291-9c9a-7ef6dbc2d0bb",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4fb4a143-85b6-4171-b66f-d52cfe175f8f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"7f44941c-0328-4691-90ce-007eb9f82da3\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d6967ea8-f68a-4eaa-89c6-bbd64d04bb35",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ac27d00d-a6f1-4cd6-8e10-de1c861250e5",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "584fdbc4-c97a-46cd-b4c8-7e39eb2b15d6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"7f44941c-0328-4691-90ce-007eb9f82da3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1629afc7-8be1-4a27-a075-83d68256e950",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3bd3c1aa-4c05-4c5d-ae45-e7192b81175c",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "de239f42-e7e3-4603-bece-97b983a6024b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"7f44941c-0328-4691-90ce-007eb9f82da3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5e327f42-efb7-4589-ad1b-412a6d0403c7",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Check Status\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "01b70726-00c8-4ccb-8532-c66531646cd9",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3080b861-fcc9-4b94-a21f-ec9ce63e9c9f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"7f44941c-0328-4691-90ce-007eb9f82da3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c055f186-4f19-41ba-93f8-1a197179bceb",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6e27b0bb-e4e9-4c5b-bb6e-19960ded3630",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0b0ec179-ff42-4461-bd9a-59dd970a61cf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"7f44941c-0328-4691-90ce-007eb9f82da3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5ed2f183-bc6e-417f-a9f1-dd7e7f1eb47b",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c0be34b-7c9b-4c09-aa63-75ea4230b02f",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "341b8cb5-9dd9-4c1e-8fa8-6ecf8daf7e66",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"7f44941c-0328-4691-90ce-007eb9f82da3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "49c5102a-df66-436b-b17b-c49885504e77",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "08734f6f-0146-4a79-8d4d-1342b14656a7"
								}
							],
							"id": "728c9edf-5a54-4071-82c2-705c81aae1dd",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "91a0f913-8a24-4bb8-899a-af49b5d73a02",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d44f81-0cf6-4b2b-b66b-e92f21ee8f8a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type CR_NCE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d8d8dcb-271e-4efd-932b-220469e0b663",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1b834036-760e-4c77-b66c-742a546bc727",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"01429295-5984-4b0a-adf4-f31f0a7c164b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "153bf62d-9268-40cd-b551-bfdc51df087d",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "109aebe2-84e6-4548-8266-cf81a5067227",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "8572b9e3-17fb-4b76-a396-838b939678dd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"01429295-5984-4b0a-adf4-f31f0a7c164b\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "acbc980a-e6c3-4375-9dd0-bf20ec62e407",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion Parcial\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f8560687-9bcb-4f9e-bfc2-871fc7e38870",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a640f19d-aee5-45c6-a6e5-bfe402762538",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\n{\n  \"actionCode\": \"cr.document.partiallyAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"01429295-5984-4b0a-adf4-f31f0a7c164b\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9ec82060-4f8b-45ae-8580-9113b627f289",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "489f036e-50b0-43b9-9312-d9665923b35e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "11712786-d699-4953-ac23-d6b00a027db5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"01429295-5984-4b0a-adf4-f31f0a7c164b\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "97403587-88e9-44e8-84d9-968cf60520d1",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5ebe788e-640a-4704-aea4-96dad807f569",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1f61e251-4ea4-48b2-a954-f62112101059",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d93ce0f0-de84-438f-9315-c8ec501d9ce4\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "3b5590e8-06f4-49cd-9cf8-751f729952d2",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38480c19-d241-47f5-baff-fa7adb393713",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c4a8477e-21dd-4dca-a7cf-06085214fe27",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"d93ce0f0-de84-438f-9315-c8ec501d9ce4\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "0e9e2f76-b815-4de8-82ec-16f3a6e5e301",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0aa0ed4a-902e-4d5e-bd03-73562ab05539",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2b5c8c17-8203-4e65-bf8f-ffc25bf3d655",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"d93ce0f0-de84-438f-9315-c8ec501d9ce4\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9926617f-4177-40a5-a4c3-b9008d87a725",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Check Status\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f26ba871-0525-4621-bd73-e7f4705fc2a0",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "36bab950-fffa-45a8-af33-4910b20230f6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"d93ce0f0-de84-438f-9315-c8ec501d9ce4\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "634692f8-e9e7-410c-9c35-5307ebf1f2c2",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9c122556-82ff-45b7-a82f-ee654071b91d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ce260724-f343-47f3-a728-3273a01c56b7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"d93ce0f0-de84-438f-9315-c8ec501d9ce4\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "b9c64172-3f44-49be-b500-d24b714db75b",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "91333dae-a551-451c-b766-4108afab7859",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c2363fa9-edba-4046-b0a3-4f1385f41ec7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"d93ce0f0-de84-438f-9315-c8ec501d9ce4\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "230968eb-4718-49ce-b5d5-eb5ffdcc8034",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "1c5ab3dc-c8a6-4b87-9103-d627752c6235"
								}
							],
							"id": "9f65e46f-b045-4319-814e-6d05122fa569",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aaececfc-8208-4cd8-9b40-5d1a2de7f2d7",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d71ec4f9-3d7c-4f38-94e9-b93a938b8333",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type CR_NDE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab67ee2c-8255-48e0-b1dc-d0c3269f563d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1ef06c96-d07f-4e71-823f-771c1c8922b9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"56d11895-6f92-4f44-9e31-992e38c88f05\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "2cbda9b2-61ba-46eb-85d3-85edfc664bb7",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "52c20a35-e1e8-427e-b652-2205949c7b40",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c0c73ae3-dbf2-4958-973b-b62bcebecf4f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"56d11895-6f92-4f44-9e31-992e38c88f05\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f42415ad-489e-4f93-a7df-52829dd37d6e",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion Parcial\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ebf2aa4-d6ab-4ab3-8551-0d8d0c4fd70d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2d459981-d67b-4aa8-b6fc-89745b9f2e90",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\n{\n  \"actionCode\": \"cr.document.partiallyAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"56d11895-6f92-4f44-9e31-992e38c88f05\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9a7ebef7-7961-4c78-a075-536650d1a001",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bb4c4281-c4ec-43f3-a587-0831a540138d",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7f1920fe-c79e-4358-8c9f-f1a83f886ce5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"56d11895-6f92-4f44-9e31-992e38c88f05\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6acee762-2dfc-4b5e-b485-74bbac114526",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "93ea57b7-461e-4bf7-89a0-eb186670d1dd",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7dfc542c-b3b0-4efc-8006-e86144b11077",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"c61a98dd-d238-49dd-a176-e41dba038d01\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6177ae3d-0093-4a2b-bf70-0ed254728fc0",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2d2209e4-1de5-48d0-9a09-968822b8b220",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cd585332-e22f-4f37-95a1-5e38f655c375",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"c61a98dd-d238-49dd-a176-e41dba038d01\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "034807eb-1a97-403e-8680-2aa271044355",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "90d5fdb2-f46e-4489-b91e-72ee82b7fa33",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "8e44049b-53dc-4bf9-b62e-e86fa5e6add8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"c61a98dd-d238-49dd-a176-e41dba038d01\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e2ced56e-d48b-4552-81c6-5376d0de9faf",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Check Status\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "11e96166-a122-4a84-905b-ae53fa34512b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5fc1b52d-065b-4251-a2a7-0b1fe3a36e70",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"c61a98dd-d238-49dd-a176-e41dba038d01\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "97c4db21-607c-4c2d-8d8e-cb65437e8786",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7dfa1a65-ad6f-484e-acb9-9f6671e9bf8c",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ef202a52-28de-484d-8ce4-cfa49a977980",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"c61a98dd-d238-49dd-a176-e41dba038d01\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c8159721-7194-4637-a803-544b40606ee9",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0e8b2ff2-81a7-4fbb-8b83-ff37ab0540c8",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7c1b9925-76d6-4145-be0c-a720f52bf983",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"c61a98dd-d238-49dd-a176-e41dba038d01\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "7cad09f4-0a7c-42e0-860c-3a6b589e2fef",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "ced259c3-3567-4eb1-bde7-eac95853b5e5"
								}
							],
							"id": "a8c8071c-5a23-4e68-b44d-e9be81085a8b",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e12330b1-1ea2-4128-abef-0d016dbaf1c1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8ff5dc6f-004b-40c0-bd83-fb0422ae481f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type CR_TE",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f3d4e3d3-d6d7-4796-8d59-19a7a0ff21df",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "477dc4c4-b15f-42f1-90ec-eb0a59b32afe",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"a68229af-516e-4bb7-b844-df1516011e39\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "971ed0d5-ad4a-4c35-9d63-823b437cf30c",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ef4e8df-43f3-4fce-98f2-dbb96f503426",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a21534e3-c7e5-4e18-be22-1b6d7f399df6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"a68229af-516e-4bb7-b844-df1516011e39\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "41a45a29-0441-419a-bc04-386a4550f39f",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion Parcial\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "863f482b-22ac-4403-8919-02f6efd022a9",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "19b5cf0a-8f77-4ea8-ba0c-020c40f8a899",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\n{\n  \"actionCode\": \"cr.document.partiallyAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"a68229af-516e-4bb7-b844-df1516011e39\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "fd77ad9e-e7d8-43a3-b342-5f101e4bc1bf",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "19b854e1-2308-4299-825b-9f813f160b0a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "23fc1902-4a1a-453e-980a-4a1d6d9cc493",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"a68229af-516e-4bb7-b844-df1516011e39\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6b7ea3ba-492a-436e-9c00-1a5e7b2ee23c",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8dc9127e-9713-4cb9-842e-53e0e1c4bf94",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "9bd8e060-40ce-44c1-b15f-d0f7570234fd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"0e4a4531-3128-4138-a19e-0af0f305055b\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f398e329-d0e7-4a4f-b02a-b85f84841cac",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c1af5bd8-5137-4c25-b288-87950c404547",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3a27e6eb-4013-4196-8222-89c62c4562eb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"0e4a4531-3128-4138-a19e-0af0f305055b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "200c29f0-62b5-425b-b9d8-f8b08655ab79",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "349aebf5-1cd3-4312-bded-cb3e34a36450",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "51c44533-a972-405d-8052-6cc352a98484",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"0e4a4531-3128-4138-a19e-0af0f305055b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c52fcbb9-5bd9-4ed1-bb09-0ddd52c9fd0d",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Check Status\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "21c3fb97-ff10-472b-8398-0d0317e99dbc",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "925f750e-cb44-4417-98cd-631e85c22615",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"0e4a4531-3128-4138-a19e-0af0f305055b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "54b9c7ac-972f-41dd-87d2-75f8060127b7",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af1cf3cc-0b07-4899-8351-acbc8b70fad6",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "eb9241fe-406d-4325-a980-b45766832b84",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"0e4a4531-3128-4138-a19e-0af0f305055b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "46a3723b-9ba6-4871-8c9e-474ffdef97a4",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6a75a2a2-0e87-4bd2-9320-800f028adb34",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "98fb6e49-09d7-47de-a1e0-cd3599ffa337",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"0e4a4531-3128-4138-a19e-0af0f305055b\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "523b6ff3-be8b-4140-9079-fe17662d19e8",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "f0d40f64-cb09-497e-87d2-51849a9763c7"
								}
							],
							"id": "e4c758df-85e7-49c3-a52a-95043992f52e",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0d11319c-40c6-4eee-82b1-5f85baaa90a2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9d966ad1-a604-4852-ab77-bee1219ea277",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type CR_FEX",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab88893d-c797-4e2a-84cf-3245df8faaf5",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d4f8db47-1eca-4095-9dab-4f69645665ee",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"bfda8589-8920-4388-aa96-a90ffc8c7922\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "98882568-ce50-4076-a8f8-77cf0294b1eb",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5d4488bd-89b5-4370-9305-62934ad0be0a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "90984b13-690f-4205-9cd3-137d4cb88492",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"bfda8589-8920-4388-aa96-a90ffc8c7922\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "80936a46-3e3b-4c4e-b497-4084ddf3b0e9",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptacion Parcial\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1dfd76cf-bd1b-4d70-b3fb-444c645105bc",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6edc8762-98c2-489f-91a8-ca4fc57b7b57",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\n{\n  \"actionCode\": \"cr.document.partiallyAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"bfda8589-8920-4388-aa96-a90ffc8c7922\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4ed64ce5-4d92-4b84-a41c-b5ecac3927ac",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazo\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "57035d0c-14b7-4e44-8037-dfbc6f10c6f3",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "74295815-3ac7-4597-9bb0-9434e5e6b170",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"cr.document.rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"bfda8589-8920-4388-aa96-a90ffc8c7922\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"detalleMensaje\": \"4.3\",\n        \"codigoActividad\": \"101011\",\n        \"condicionImpuesto\": \"01\",\n        \"montoDelImpuesto\": \"0.00\",\n        \"montoTotal\": \"0.00\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "86ee5dc5-f2f3-4e64-b422-64b409e7837b",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "26b809ab-3338-4d3e-b0bc-774d15e8ae71",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6452037a-1da0-451d-8f64-14e837af34c2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"458f7ef3-6220-4f41-9939-bff2176de698\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "84a6f93f-2e9a-4356-86ff-a91301bfb93a",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87d5e4ed-7a4e-4f0e-af30-f59fe77afc0b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fa1a2bca-2e0a-413d-8964-bb48fbda4b64",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"458f7ef3-6220-4f41-9939-bff2176de698\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "504fa298-d135-4b41-ae27-3406137b2e7c",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0032571e-b613-4afe-a64d-8bb5c0d2ec37",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4e5e9f5b-0d36-4256-858e-688ccfd5a73e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"458f7ef3-6220-4f41-9939-bff2176de698\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1f2b301f-68c2-48dd-baa7-75aa9868ad1c",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Check Status\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "50baa1fe-0734-431a-a62f-fdf9bf89e00b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7c5e38b8-30b7-44f8-967b-d16d89fad885",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.checkStatus\",\n  \"documents\": [\n    {\n      \"documentId\": \"458f7ef3-6220-4f41-9939-bff2176de698\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "807dc072-139f-44bb-a146-f0cac47097cf",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1e1be7af-c4eb-488c-935b-ca134263c8d9",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "90e5164b-c979-44e6-97b5-7f9bca4d6762",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"458f7ef3-6220-4f41-9939-bff2176de698\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "028707be-6697-4aaa-8a96-2ea653f3bd2b",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d4eef9dd-9a89-4e7d-9e20-504944d58131",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "41d16f88-c176-4815-90ba-ef4e1780926e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"458f7ef3-6220-4f41-9939-bff2176de698\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "2b8a32e4-7e97-45f9-9ca2-e40eae5cf1cf",
															"key": "countryCode",
															"value": "cr",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "be0b4a26-9513-455e-89f1-9108baf59f5a"
								}
							],
							"id": "e2fdb66b-b97c-4faa-bacd-fd47e0e4187c",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "05b4c899-6c9e-48cc-bae8-0893f82636e5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "84500edb-bc04-4ab2-be4d-b29a3dcdea1b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"id": "73820dd2-0780-4c32-af8c-1c0bf6fa4506",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "430c0fd7-3530-46b3-948a-70177819aab5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "65ddef20-11cf-489e-90bb-2819c5f56837",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "ARGENTINA",
					"item": [
						{
							"name": "Type FEV1Authorize ",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8743973d-5a3a-4260-8a14-f319ff4c42bb",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "eca13bb6-cf5e-443a-a4e5-84f27c92c8ea",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"23d53962-a7b3-4493-99a0-2f2156be462a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8442ac9b-b092-4f15-abf6-c88eb78f2e81",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ba10a2c0-023a-4b04-ad48-57f50c2e5e70",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cc8d8bc8-7293-46be-a47e-4d38fd8113c3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"23d53962-a7b3-4493-99a0-2f2156be462a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1d20c19d-b040-44c3-814d-ab32948068fa",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "63a7630c-4bea-4b27-8968-5fa63ad6d680",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3495dba8-858f-49c2-951e-6a19465f4e2f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"23d53962-a7b3-4493-99a0-2f2156be462a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f4a45829-f87c-43a6-b3f4-058040193519",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8bb1dba9-ca4f-45e1-92b1-000d804146aa",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "70e6de0c-d1d0-4eab-94e7-75eed3c77b3b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"23d53962-a7b3-4493-99a0-2f2156be462a\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d9526909-6b5d-4214-8bcb-0c311205d0e8",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "afac2a88-fcbb-4c6c-9ac1-c462b9ddd3e8",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "22ad7c53-ddb9-4be7-9400-60baaea5a0a4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"23d53962-a7b3-4493-99a0-2f2156be462a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "680a49a6-92ef-419c-809a-d6176cda09f7",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-build attachments\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a19287b7-67de-440b-ae52-6584bd7f602a",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4a2360dc-dd1b-4c8c-897b-a9caf770074a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"ae4edf0b-23cf-4b2c-8c91-62b668df2832\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8829946c-d619-48c9-b7b8-11dd37281d2a",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a8fa8c44-8c66-421e-bd95-99e9ed4872e2",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fe4b1103-2150-4486-a8af-6924b45f07cc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"23d53962-a7b3-4493-99a0-2f2156be462a\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianellI@sovos.com\",\n        \"subject\": \"assunto\",\n        \"body\": \"corpo do e-mail\",\n        \"bodyishtml\": \"false\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "b4ab3d03-5003-414c-b41a-2a0eef6abf1c",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "068d39ad-8454-4736-b7a9-0a4cf815285e",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6374ecec-93c1-43b3-9966-80aa9442c9fb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"subject\": \"inboundtesting\",\n        \"body\": \"testetstetste\",\n        \"bodyishtml\": \"false\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "2df18cbf-145a-4b3c-914c-a8fab82eccbc",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "dec81caf-beef-4181-99e5-e124d0cd1bb8"
								}
							],
							"id": "30d11b9b-988e-48aa-ba45-08a83fa28bc5",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9ff4392a-2279-476f-98bd-ef2d38be8eed",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "36311a44-ac06-4016-9ca6-d39fe08672a6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type FEXAuthorize",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de451708-b598-41d2-9fe0-9c191e5c9089",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d829118c-e220-4107-8faf-da9f90634743",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"53aea4ad-6d36-48ff-91ca-ef242d224b5f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "81b51c22-520a-49c0-b842-1db0ec32a146",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f60327f5-e310-4a3e-a624-d36ebc3d3fc5",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d247aa32-021d-4217-aff4-646efd0ae004",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"53aea4ad-6d36-48ff-91ca-ef242d224b5f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d4886c05-4a67-4454-9944-383d7b9efd22",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbbc065-acde-4db5-bfe7-0dcd70df68ea",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a9d3abbe-a74b-4688-abbe-6b4a3bd113b2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"53aea4ad-6d36-48ff-91ca-ef242d224b5f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "103c8ef8-3992-45b2-a568-3f39a843d860",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f5ca9080-dce9-4bdf-8f6a-0c64937c2076",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2050628a-139b-4bd6-a9d2-2f480d3f6367",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"53aea4ad-6d36-48ff-91ca-ef242d224b5f\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "90ea70a3-0b23-4b97-97b1-9c7093ff1044",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc0b7c28-bfd4-4460-8def-66d8babcc45e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "35d2c299-2a99-43e4-971d-1c09b49b0435",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"53aea4ad-6d36-48ff-91ca-ef242d224b5f\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6d4c03f6-927f-45d5-ac8f-6550ad033d6a",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f91094d9-d664-405e-a565-37659d20bf37",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "949bb5a6-286f-4503-8ae4-a5aaac43f878",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"57598174-2501-4517-abd5-7c86ed1d683b\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianellI@sovos.com\",\n        \"subject\": \"assunto\",\n        \"body\": \"corpo do e-mail\",\n        \"bodyishtml\": \"false\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5b999fe4-bff7-4215-9303-746ea36be34b",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c8be237-05f5-4e23-80d5-1834cd7cb678",
														"exec": [
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "76ab0541-3a48-487e-a90a-b478fcd61e00",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"subject\": \"inboundtesting\",\n        \"body\": \"testetstetste\",\n        \"bodyishtml\": \"teste\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "e013bb54-6c2f-43d6-b25a-da50abd126c2",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "f8b997a2-1575-4262-9163-a77c31a02581"
								}
							],
							"id": "2486b636-fe83-42f1-892f-4604e5ac7563",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8499a119-a3dc-4d98-8438-f41ee9e8f6ae",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2512f40f-3677-435f-b2a3-1befa35fb033",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type FEAuthorize",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "540f1689-2d8c-4dca-b252-ce476fe3cea2",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "295ad87d-d825-4242-aace-d5dd252a4622",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"d1a8de84-78c9-4a3e-b4be-120e9c55eb86\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "d93c7efd-9e6b-47eb-bcd1-196d9d4ccdb4",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ff0f537c-75c9-4101-a183-fffa06248fad",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4a8b64d4-ed58-4840-9646-ab548b73fa15",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"d1a8de84-78c9-4a3e-b4be-120e9c55eb86\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c978729b-a1ca-44b7-a6be-2c6cf02d37f2",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fd1fc0a2-bc73-4c58-a9b6-b8e33e3d8420",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "64c3a91d-77c0-4678-8ba4-3195cd08168d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"d1a8de84-78c9-4a3e-b4be-120e9c55eb86\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "7bc05755-068c-497b-82a8-0342f932a1b4",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a7ca4977-a60f-4482-b7c1-ab9e8b4861a2",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "daf37bcf-ed0b-4130-a428-8ee4428f314d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"d1a8de84-78c9-4a3e-b4be-120e9c55eb86\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "91a7df3d-26d9-44e0-821a-4fad36cd7ea5",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f23c3bd0-3ac5-42a3-96da-cfdda6e9ddf1",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "031f3b40-ff7f-4496-b5c4-000b59f44524",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d1a8de84-78c9-4a3e-b4be-120e9c55eb86\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "3be22dac-9693-4142-bde5-0eb514010bab",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4b4d86eb-0de6-4034-8328-ccca7fb1a32b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3e13db5d-93de-44af-b81c-2dba764a02b1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"d1a8de84-78c9-4a3e-b4be-120e9c55eb86\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"subject\": \"assunto\",\n        \"body\": \"testetstetste\",\n        \"bodyishtml\": \"false\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9ac9d59f-8382-43bb-baec-3f83c887d426",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e4018c56-60b2-4505-bd61-aea7ce886e63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "6ff09194-4fce-4be7-af17-b43173dc314c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"subject\": \"inboundtesting\",\n        \"body\": \"testetstetste\",\n        \"bodyishtml\": \"teste\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "b92d7bee-04b0-4ed0-b109-acd15e0e9fab",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "cb029bd5-9721-470c-8180-10ea1ec32a14"
								}
							],
							"id": "e087b7f8-af03-4223-beb2-52f66ce1e56c",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f9361ae0-a4ee-450e-8315-a43b5720a52d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6d237392-07f0-43c1-8fb3-517b52c5dead",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type BFEAuthorize",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fed2d75-3771-4a7c-b8d7-cf3da14044c2",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "240916de-6e22-463b-a549-3f0b235cf1c1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"c07fc8da-e9e9-4ee5-9afe-15a77238d30c\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "700bc11e-6af3-40e9-b032-b7bf39fb39ea",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c6b499a9-0921-40cf-97a9-650e037a68ed",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "9120756a-ec1e-4130-860e-723756f126e3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"c07fc8da-e9e9-4ee5-9afe-15a77238d30c\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "278421cc-1ad3-486d-8ff2-68a934b04c16",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "67a7443e-a6e1-4562-840b-7df4f98653e5",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "65443512-e00b-4edd-b9c7-d59fae8ffb8f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"c07fc8da-e9e9-4ee5-9afe-15a77238d30c\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "b96e5b43-0552-437b-8b72-f09f84e43caf",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b43677f9-6a65-4c5e-9c12-90b783640de4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fcab4f24-dffd-4be5-8752-f2a3922f0707",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"c07fc8da-e9e9-4ee5-9afe-15a77238d30c\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f95e7e37-14c7-4d90-96ba-19bfac0792a4",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5724642f-45cd-49dc-b1e9-035fbad9860f",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4819aea5-5b60-48a1-afc2-8841d0c653d3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"c07fc8da-e9e9-4ee5-9afe-15a77238d30c\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f3b60e83-2642-4ae0-bf64-0f8f3c6e6f20",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b5de261a-4d1d-4c7d-b480-2fe130e0ed36",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "66fc8928-a0d2-444e-96f0-1edd5497fbf6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"c07fc8da-e9e9-4ee5-9afe-15a77238d30c\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"subject\": \"assunto\",\n        \"body\": \"corpo\",\n        \"bodyishtml\": \"false\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a7951978-fde1-48ba-b854-42050f92617c",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Send Email\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1ae5ed12-f6b7-4cf7-92b9-ae047ada24c4",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f03a393e-c281-4743-b739-fe8a831f900e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"subject\": \"inboundtesting\",\n        \"body\": \"testetstetste\",\n        \"bodyishtml\": \"teste\",\n        \"attachmentname\": \"teste\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "eb74598c-6e7d-4f25-a092-873eed3b777d",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "65c176cf-f19d-4bcb-81d6-6f955e9bd328"
								}
							],
							"id": "badcd2f8-873f-43b5-a8a9-0bd219b6a20b",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21075dbe-9785-42a8-a1ce-c766f2b4fee7",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e03835d5-952c-4f62-b968-e8e075cd3ed3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type COT",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Outbound - \"Re-Imprimir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0fa9bb64-b4a1-4094-a27b-1a0dd6627efb",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "9081fc5a-cd58-44f2-a5e1-234525316b57",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"f107369a-84d1-4ef5-ae95-68d42440c28a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4bee6339-dbfd-4da5-8417-3fa82cc82060",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6bad399b-7e68-4a32-9db7-66aed739f69e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4872e041-2466-4950-8fa3-6aadc5c9d358",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"f107369a-84d1-4ef5-ae95-68d42440c28a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "8c95671d-cf83-49c3-a4ca-c7caf74125bf",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a74db3a4-ee80-4bc6-b945-f6653449d89c",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "15b388de-0391-4182-a5ed-2f8cb0e48ab4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"f107369a-84d1-4ef5-ae95-68d42440c28a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "0b8da798-97a1-4504-ad1c-2c8071b6aa2e",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69dbccb1-9d80-4d5b-a911-ef76229c4885",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "9481184c-edf9-4226-b08e-8df28232119a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"f107369a-84d1-4ef5-ae95-68d42440c28a\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a8ceba8b-0edf-4220-967f-78a24b87abc2",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fcd4839e-05c9-478f-8888-755b731c93f4",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "129565b2-379b-42cd-b8f5-7a25be299f40",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"f107369a-84d1-4ef5-ae95-68d42440c28a\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "88f2fb6c-dda2-4f29-b44a-0fbfee5c9ed1",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0550247c-6878-4a1d-84ce-267b467ac5df",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e625a5f5-4d6a-4f86-ae00-466137418eec",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.supplierAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "6e2e956f-3a34-4279-8fde-983cb9a78be9",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Recibo Mercaderias Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f6b70ce7-ce9f-4ad3-9275-bf6949c1693e",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0a459944-e208-42b3-be2c-d87714ae6cac",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"ar.document.supplierRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"teste\"\n      }\n    }\n  ]\n}\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "018f26d3-5d5f-422d-8f09-b934c6431bb4",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aceptar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9a2f3d97-406c-4740-8b76-bf9d7a47ff22",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cbc64dde-1e8f-49a8-91ae-a7facbdbc888",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.Acceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"invoicenumber\": \"1223\",\n        \"status\": \"Aprobado\"\n      }\n    }\n  ]\n}\n\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "fd413fc9-a426-4762-9da1-37c961ed3bcb",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "af4b96af-ba26-4c52-b829-cfd4a45bd9a7",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ab40e355-a619-4a05-b433-2378add6c32a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.Rejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\",\n        \"reason\": \"teste\"\n      }\n    }\n  ]\n}\n\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "de0500e6-a240-4a77-aebb-015b07c6ef18",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "0742cb4b-10eb-4deb-8a57-c41eb588c4e0"
								}
							],
							"id": "658cbf7e-3d07-4977-b868-2ed9bc04ab84",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2caf15bc-8b3c-430a-89fa-f117fde942f1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "003012a6-2d38-478a-91e7-a32bf8525f78",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Type CAEA",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Outbound - \"Re-enviar\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3842f79d-3ad5-4a77-b45b-e9892292cbf2",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f1b45024-f72e-49ec-9ec6-bbc3dab4a157",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"005912BC-9EA1-44F6-A8A2-BAE1649AE911\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "827966f2-9181-417e-afa7-2741e57bf1fa",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f29d79a4-b477-45ab-95e7-8acdfb3e0498",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3d11e1c7-cf2c-43f2-9541-93c6a02ba7c1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"005912BC-9EA1-44F6-A8A2-BAE1649AE911\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "761460a2-d4ad-4e2a-9c6b-da2d9cd5552a",
															"key": "countryCode",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "61e5aaa4-4a45-4183-958e-b9b323382fdc"
								}
							],
							"id": "a09a5566-dc59-4b23-b043-2c2b040e9d43",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a8924358-1ef0-4ebc-8b61-9d5e0064edd1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ae2fdabb-454e-4963-9c40-072574342d8f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"id": "9492259d-116b-4a7f-9433-031af1a4df49"
				},
				{
					"name": "MEXICO",
					"item": [
						{
							"name": "Type CFDI",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "Inbound - \"Gerar PDF\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7c20c969-9acc-4bdb-8f26-22575edc3ac3",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "40d12753-94bc-4261-bc45-b3d35b8712a5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"fb0d5b8b-2632-4123-8c46-857a4e954c6e\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "c80eedce-1ecb-411b-b239-7985dcdecdb2",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Re-distribuir\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d119439-0681-442b-9976-a7e85e8ceee5",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "866b4d45-b526-45a3-b10c-81f4d45103ad",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"8717bf34-0bdf-46e6-abe7-1a00c16cc630\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "a1b0705a-77d2-4fbb-aa71-db6b76ac6d30",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Validation Invoice\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "424c5e28-5d98-4a50-914a-7c65cebee7a9",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cb880b81-2f78-4179-80ba-688579ae238d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.validation\",\n  \"documents\": [\n    {\n      \"documentId\": \"8717bf34-0bdf-46e6-abe7-1a00c16cc630\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "9a7f22d2-31c9-4fae-82e1-a1364f832603",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Rechazar la cancelacion\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ea669a4a-22b9-405d-b6ab-e7c97cb5f351",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "986e8def-ee63-4c5f-ae53-3e114d3405c4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"mx.document.cancelRejection\",\n  \"documents\": [\n    {\n      \"documentId\": \"8717bf34-0bdf-46e6-abe7-1a00c16cc630\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "58c90137-3df1-410b-8b09-434155a478d2",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Inbound - \"Aprobar la cancelacion\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d60d0658-3853-4768-8192-96f85d53bc80",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7f3b4deb-8903-4b55-9b24-d4323bd4cb45",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"mx.document.cancelAcceptance\",\n  \"documents\": [\n    {\n      \"documentId\": \"8717bf34-0bdf-46e6-abe7-1a00c16cc630\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "af84c5ac-943d-487c-9943-58b11d934e78",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Gerar PDF\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "83fddaa7-0be0-4427-865b-a8e8e5626e3e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "601e9261-d3ee-4941-9512-4654cb308f16",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.render\",\n  \"documents\": [\n    {\n      \"documentId\": \"ebc5ca39-8f50-4b91-972f-1a652685a6e3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "1d77e67e-220b-42c8-9f53-5f62d1b08826",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-Imprimir\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "575f177d-904a-4625-8dac-506a2e81ee33",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a402e809-8503-415a-b545-4555f9903f9c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.print\",\n  \"documents\": [\n    {\n      \"documentId\": \"ebc5ca39-8f50-4b91-972f-1a652685a6e3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "5e821624-0547-4551-afa9-781730f2f56e",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-enviar\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5e4cc6ec-6880-488d-87f2-796b2c888a72",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "eb988c00-bfb5-4497-9ffe-0a4ec3bc55fe",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.transmit\",\n  \"documents\": [\n    {\n      \"documentId\": \"ebc5ca39-8f50-4b91-972f-1a652685a6e3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "0213c20a-b86a-4f80-9ee9-418a56109afc",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Re-distribuir\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "779ad524-65a9-4a81-8aca-3c0edbac558b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "5d9f84b2-aa33-4c8a-94f6-c1a5cb426a36",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.distribute\",\n  \"documents\": [\n    {\n      \"documentId\": \"ebc5ca39-8f50-4b91-972f-1a652685a6e3\",\n      \"metadata\": {\n        \"email\": \"giulliano.gianelli@sovos.com\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4dfa8d96-00ac-4cf8-b9e3-a3c48be645ba",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Descarregar Retornos\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "00f9f036-e3f5-4fe1-b7a0-cbb805cc9da2",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "b6daa4f0-8b31-4bc8-9db9-fc9deb270ba3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.markNotificationsUnread\",\n  \"documents\": [\n    {\n      \"documentId\": \"fb0d5b8b-2632-4123-8c46-857a4e954c6e\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "de5ee262-48ca-49ed-9f48-0f325e6af6c9",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Archive\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "864cb7e6-6a20-4afd-9035-c4221ea854d1",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4ee9bc3a-b3ee-4288-ad4b-28f1ab737dae",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.archive\",\n  \"documents\": [\n    {\n      \"documentId\": \"ebc5ca39-8f50-4b91-972f-1a652685a6e3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "45aaaff8-e82d-402b-b972-68b42f59cc80",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Cambiar Pac y Enviar\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "272df5b3-6b9e-455c-9c8e-4fc73836f6d1",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "204aa466-1484-4d61-b5ef-6b6ff1e35739",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"mx.document.changePac\",\n  \"documents\": [\n    {\n      \"documentId\": \"ebc5ca39-8f50-4b91-972f-1a652685a6e3\",\n      \"metadata\": {\n        \"reason\": \"teste xxxxxxxxxxxxxxxxx\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "4532dd0b-6637-454d-b483-bc8f2850422e",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Resolver encabezado\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "aaaca5fd-6a16-4feb-981d-fde9e16e0c9e",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "dabdcbea-5c40-4f88-aebb-9018cbae45d2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"mx.document.headerSolve\",\n  \"documents\": [\n    {\n      \"documentId\": \"ebc5ca39-8f50-4b91-972f-1a652685a6e3\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "dc9a24dd-3cef-46e8-8c31-d19da22ae452",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Outbound - \"Cancelar\" Action MX",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "21496003-0eed-4806-8790-22e1cd783f5b",
														"exec": [
															"pm.test(\"Status code is 202\", function () {",
															"    pm.response.to.have.status(202);",
															"});",
															"",
															"pm.test(\"Success should be true\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"true\");",
															"});",
															"",
															"pm.test(\"Body matches string\", function () {",
															"    pm.expect(pm.response.text()).to.include(\"The action request was received and sent to the execution queue\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "eb553229-c525-40dc-9a41-9371c7ffe968",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"actionCode\": \"document.cancellation\",\n  \"documents\": [\n    {\n      \"documentId\": \"9d5b9368-c0a0-4b52-b530-b88127848267\",\n      \"metadata\": {\n        \"reason\": \"razão do cancelamento\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode/action",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode",
														"action"
													],
													"query": [
														{
															"key": "",
															"value": "",
															"disabled": true
														}
													],
													"variable": [
														{
															"id": "f1cdd52f-fa90-4f08-adfe-ac65566744c3",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "9e3950d3-97ce-4bcd-a8c5-e552a7f2e89a"
								}
							],
							"id": "3d9aee4b-4931-4009-b7cc-3ca86672fc62",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90d34fdd-1e48-4897-bbbc-9b11b36e72e0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5d2b62d2-d494-45a4-a8e4-f1ecba27ccf4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"id": "4a8be4d0-c849-4723-920b-1f5ed420cb59"
				}
			],
			"id": "5acb62b1-5dcd-406f-98ea-efc6707af384"
		},
		{
			"name": "DOCUMENT API",
			"item": [
				{
					"name": "audit",
					"item": [
						{
							"name": "200 - Valid document with audit",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7d9d3ce-30f6-4940-a4dd-e05d33381237",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document audit returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0548ce55-91c7-4b89-ae11-fe8698e2a043",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/br/0bc2a6eb-80d7-442a-9e41-81a5d3671afb/audit",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										"br",
										"0bc2a6eb-80d7-442a-9e41-81a5d3671afb",
										"audit"
									],
									"query": [
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "perPage",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "200 - Valid document with audit and page & perPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "74c98d42-1dca-4b93-869f-529e8738227a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function () {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document audit returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should return page and perPage value correctly\", function () {",
											"    pm.expect(jsonData.data.pageState.perPage).to.eql(20);",
											"    pm.expect(jsonData.data.pageState.page).to.eql(3);",
											"    var items = jsonData.data.items;",
											"    if (items > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8dc1ed2a-6b47-4faa-b875-0a72d52f7989",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/br/0bc2a6eb-80d7-442a-9e41-81a5d3671afb/audit?page=3&perPage=20",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										"br",
										"0bc2a6eb-80d7-442a-9e41-81a5d3671afb",
										"audit"
									],
									"query": [
										{
											"key": "page",
											"value": "3"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Document audit not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d3864c9-ee6b-4e2c-a2f1-a88483a7208c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Not Found\");",
											"     pm.expect(pm.response.text()).to.include(\"Document audit not found\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c45b7f9a-b47f-486f-aad8-bc346a8fce8d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/br/0000002e-2ba6-437a-ae38-42fa06871689/audit",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										"br",
										"0000002e-2ba6-437a-ae38-42fa06871689",
										"audit"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "404 - Invalid documentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6decda2e-b444-4af4-9813-fd430dabcc29",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Not Found\");",
											"     pm.expect(pm.response.text()).to.include(\"Document audit not found\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "195fe977-2a5a-4eec-ab25-d3a39955fea6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/br/8315a2b1-e508-4eff-926e-962a12be78f2c2/audit",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										"br",
										"8315a2b1-e508-4eff-926e-962a12be78f2c2",
										"audit"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "401 - Invalid Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13ce6afb-7a68-466e-97b0-9e8ca877255e",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(jsonData.status).to.eql(401);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Invalid credentials\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9be752bd-7783-46a2-94ed-b39d98401306",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"password": "Trustfiles1234",
										"username": "invalid"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/69dd4d6f-d8d0-4062-a18f-442a15b2ff0a/audit"
							},
							"response": []
						}
					],
					"id": "5f1c06ae-b443-4321-9f41-040396e29309",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f22b5a8e-c929-4b73-8e4c-0d96262f9d71",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7149c1c-7403-40c7-ad0a-c4d17842faf3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "list",
					"item": [
						{
							"name": "200 - Retrieve document list processType 1 and DB 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "abf1aa72-8376-4cb0-80b5-d022d4f757d8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should return page and perPage value correctly\", function () {",
											"    pm.expect(jsonData.data.pageState.perPage).to.eql(20);",
											"    pm.expect(jsonData.data.pageState.page).to.eql(35);",
											"    var items = jsonData.data.items;",
											"    if (items > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "396cbe44-5da0-4072-b635-7374e369cb34",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{AuthorizationsQA}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									},
									{
										"description": "Header used by postman mock to force http status, please ignore.",
										"key": "x-mock-response-code",
										"type": "text",
										"value": "200",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=DatabaseLocation eq 1 and ProcessType eq 1&$orderby=CreationDate&productId=ide&page=35&perPage=20",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										":countryCode"
									],
									"query": [
										{
											"key": "$filter",
											"value": "DatabaseLocation eq 1 and ProcessType eq 1"
										},
										{
											"key": "$orderby",
											"value": "CreationDate"
										},
										{
											"key": "productId",
											"value": "ide"
										},
										{
											"key": "page",
											"value": "35"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									],
									"variable": [
										{
											"id": "587fa960-910f-4ddc-80a4-2365e12a020c",
											"key": "countryCode",
											"value": "br",
											"type": "string"
										}
									]
								},
								"description": "Returns a list of documents. Returns a paginated response"
							},
							"response": [
								{
									"id": "72780824-af40-4974-972b-24871a645673",
									"name": "Retrieve list of documents",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Invoiceware-Token",
												"value": "JAAAAB%2bLCAAAAAAABAArriwuSc2tqSmG0ob6Rub6RgZGBgqGVobmVkZGCo6%2bAGLulbskAAAA",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{tf.bff.url}}/api/v1/documents?product=br_inv&metadata=[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]&page=1&perPage=20",
											"host": [
												"{{tf.bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents"
											],
											"query": [
												{
													"key": "product",
													"value": "br_inv"
												},
												{
													"key": "metadata",
													"value": "[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"success\": \"true\",\n    \"status\": \"200\",\n    \"message\": \"Documents listed\",\n    \"timestamp\": {{$timestamp}},\n    \"data\": {\n        \"pageState\": {\n            \"page\": \"1\",\n            \"perPage\": \"20\",\n            \"totalPages\": \"5\",\n            \"totalEntries\": \"200\"\n        },\n        \"documents\": [\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            },\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "200 - Retrieve document list processType 1 and DB 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6519b17b-6969-4865-957e-bfc2f85003d7",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should return page and perPage value correctly\", function () {",
											"    pm.expect(jsonData.data.pageState.perPage).to.eql(20);",
											"    pm.expect(jsonData.data.pageState.page).to.eql(1);",
											"    var items = jsonData.data.items;",
											"    if (items > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a7be7e1b-71a9-4f6a-88c2-e08dbad0a56d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{AuthorizationsQA}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									},
									{
										"description": "Header used by postman mock to force http status, please ignore.",
										"key": "x-mock-response-code",
										"type": "text",
										"value": "200",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=DatabaseLocation eq 0 and ProcessType eq 1&$orderby=CreationDate&productId=ide&page=1&perPage=20",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										":countryCode"
									],
									"query": [
										{
											"key": "$filter",
											"value": "DatabaseLocation eq 0 and ProcessType eq 1"
										},
										{
											"key": "$orderby",
											"value": "CreationDate"
										},
										{
											"key": "productId",
											"value": "ide"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									],
									"variable": [
										{
											"id": "422733e9-a283-4306-a79f-af13fbe139b5",
											"key": "countryCode",
											"value": "br",
											"type": "string"
										}
									]
								},
								"description": "Returns a list of documents. Returns a paginated response"
							},
							"response": [
								{
									"id": "1a887485-b4bd-402f-aa25-5c04b12e13d5",
									"name": "Retrieve list of documents",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Invoiceware-Token",
												"value": "JAAAAB%2bLCAAAAAAABAArriwuSc2tqSmG0ob6Rub6RgZGBgqGVobmVkZGCo6%2bAGLulbskAAAA",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{tf.bff.url}}/api/v1/documents?product=br_inv&metadata=[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]&page=1&perPage=20",
											"host": [
												"{{tf.bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents"
											],
											"query": [
												{
													"key": "product",
													"value": "br_inv"
												},
												{
													"key": "metadata",
													"value": "[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"success\": \"true\",\n    \"status\": \"200\",\n    \"message\": \"Documents listed\",\n    \"timestamp\": {{$timestamp}},\n    \"data\": {\n        \"pageState\": {\n            \"page\": \"1\",\n            \"perPage\": \"20\",\n            \"totalPages\": \"5\",\n            \"totalEntries\": \"200\"\n        },\n        \"documents\": [\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            },\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "200 - Retrieve document list processType 0 and DB 0",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cbeb8dc0-3ec2-40a5-a71e-67cd8b1f1a90",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should return page and perPage value correctly\", function () {",
											"    pm.expect(jsonData.data.pageState.perPage).to.eql(20);",
											"    pm.expect(jsonData.data.pageState.page).to.eql(1);",
											"    var items = jsonData.data.items;",
											"    if (items > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "28f6f1f5-a3fa-46dc-936d-4c81c1c714ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{AuthorizationsQA}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									},
									{
										"description": "Header used by postman mock to force http status, please ignore.",
										"key": "x-mock-response-code",
										"type": "text",
										"value": "200",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=DatabaseLocation eq 0 and ProcessType eq 0&$orderby=CreationDate&productId=ide&page=1&perPage=20",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										":countryCode"
									],
									"query": [
										{
											"key": "$filter",
											"value": "DatabaseLocation eq 0 and ProcessType eq 0"
										},
										{
											"key": "$orderby",
											"value": "CreationDate"
										},
										{
											"key": "productId",
											"value": "ide"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									],
									"variable": [
										{
											"id": "3acfdbb3-112d-412b-8cec-2ae6b451e406",
											"key": "countryCode",
											"value": "br",
											"type": "string"
										}
									]
								},
								"description": "Returns a list of documents. Returns a paginated response"
							},
							"response": [
								{
									"id": "79a53f14-ddbd-4570-b072-979734c12ab5",
									"name": "Retrieve list of documents",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Invoiceware-Token",
												"value": "JAAAAB%2bLCAAAAAAABAArriwuSc2tqSmG0ob6Rub6RgZGBgqGVobmVkZGCo6%2bAGLulbskAAAA",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{tf.bff.url}}/api/v1/documents?product=br_inv&metadata=[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]&page=1&perPage=20",
											"host": [
												"{{tf.bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents"
											],
											"query": [
												{
													"key": "product",
													"value": "br_inv"
												},
												{
													"key": "metadata",
													"value": "[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"success\": \"true\",\n    \"status\": \"200\",\n    \"message\": \"Documents listed\",\n    \"timestamp\": {{$timestamp}},\n    \"data\": {\n        \"pageState\": {\n            \"page\": \"1\",\n            \"perPage\": \"20\",\n            \"totalPages\": \"5\",\n            \"totalEntries\": \"200\"\n        },\n        \"documents\": [\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            },\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "200 - Retrieve document list processType 0 and DB 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5339bced-aede-4bcb-bb6f-e4b15aae9d49",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should return page and perPage value correctly\", function () {",
											"    pm.expect(jsonData.data.pageState.perPage).to.eql(20);",
											"    pm.expect(jsonData.data.pageState.page).to.eql(1);",
											"    var items = jsonData.data.items;",
											"    if (items > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "029989d3-a23f-413d-93b9-55461f4097ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{AuthorizationsQA}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									},
									{
										"description": "Header used by postman mock to force http status, please ignore.",
										"key": "x-mock-response-code",
										"type": "text",
										"value": "200",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=DatabaseLocation eq 1 and ProcessType eq 0&$orderby=CreationDate&productId=ide&page=1&perPage=20",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										":countryCode"
									],
									"query": [
										{
											"key": "$filter",
											"value": "DatabaseLocation eq 1 and ProcessType eq 0"
										},
										{
											"key": "$orderby",
											"value": "CreationDate"
										},
										{
											"key": "productId",
											"value": "ide"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									],
									"variable": [
										{
											"id": "bf4a620c-3e7c-4233-9136-7a172fcdc53a",
											"key": "countryCode",
											"value": "br",
											"type": "string"
										}
									]
								},
								"description": "Returns a list of documents. Returns a paginated response"
							},
							"response": [
								{
									"id": "d026e856-824a-4d0c-acf7-da22bafe9027",
									"name": "Retrieve list of documents",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Invoiceware-Token",
												"value": "JAAAAB%2bLCAAAAAAABAArriwuSc2tqSmG0ob6Rub6RgZGBgqGVobmVkZGCo6%2bAGLulbskAAAA",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{tf.bff.url}}/api/v1/documents?product=br_inv&metadata=[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]&page=1&perPage=20",
											"host": [
												"{{tf.bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents"
											],
											"query": [
												{
													"key": "product",
													"value": "br_inv"
												},
												{
													"key": "metadata",
													"value": "[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"success\": \"true\",\n    \"status\": \"200\",\n    \"message\": \"Documents listed\",\n    \"timestamp\": {{$timestamp}},\n    \"data\": {\n        \"pageState\": {\n            \"page\": \"1\",\n            \"perPage\": \"20\",\n            \"totalPages\": \"5\",\n            \"totalEntries\": \"200\"\n        },\n        \"documents\": [\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            },\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            }\n        ]\n    }\n}"
								}
							]
						},
						{
							"name": "200 - Retrieve document list filtering a specific document",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d9467d3c-35b1-43d9-be1a-87287d50e6b2",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should return page and perPage value correctly\", function () {",
											"    pm.expect(jsonData.data.pageState.perPage).to.eql(20);",
											"    pm.expect(jsonData.data.pageState.page).to.eql(1);",
											"    var items = jsonData.data.items;",
											"    if (items > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7f23f939-172a-41cc-9618-1a3a34f50bf8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{AuthorizationsQA}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"disabled": true
									},
									{
										"description": "Header used by postman mock to force http status, please ignore.",
										"key": "x-mock-response-code",
										"type": "text",
										"value": "200",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=DatabaseLocation eq 0 and ProcessType eq 0 and TagInt2 eq 10009013&$orderby=CreationDate&productId=ide&page=1&perPage=20",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										":countryCode"
									],
									"query": [
										{
											"key": "$filter",
											"value": "DatabaseLocation eq 0 and ProcessType eq 0 and TagInt2 eq 10009013"
										},
										{
											"key": "$orderby",
											"value": "CreationDate"
										},
										{
											"key": "productId",
											"value": "ide"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									],
									"variable": [
										{
											"id": "3abf5121-9e6a-481a-9e63-f5f5b85752b7",
											"key": "countryCode",
											"value": "br",
											"type": "string"
										}
									]
								},
								"description": "Returns a list of documents. Returns a paginated response"
							},
							"response": [
								{
									"id": "513525f8-ffc5-4d63-a156-cf3ae438dae4",
									"name": "Retrieve list of documents",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Invoiceware-Token",
												"value": "JAAAAB%2bLCAAAAAAABAArriwuSc2tqSmG0ob6Rub6RgZGBgqGVobmVkZGCo6%2bAGLulbskAAAA",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{tf.bff.url}}/api/v1/documents?product=br_inv&metadata=[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]&page=1&perPage=20",
											"host": [
												"{{tf.bff.url}}"
											],
											"path": [
												"api",
												"v1",
												"documents"
											],
											"query": [
												{
													"key": "product",
													"value": "br_inv"
												},
												{
													"key": "metadata",
													"value": "[{\"searchType\":\"identity\",\"field\":\"ProcessType\",\"values\":[\"0\"]},{\"searchType\":\"identity\",\"field\":\"UseDatabase\",\"values\":[\"0\"]},{\"searchType\":\"range\",\"field\":\"TagInt2\",\"values\":[\"35774\",\"951478\"]},{\"searchType\":\"range\",\"field\":\"CreationDate\",\"values\":[\"\",\"2019-09-08T19:01:55.714942+03:00\"]},{\"searchType\":\"range\",\"field\":\"TagDate1\",\"values\":[\"2020-01-08T19:01:55.714942+03:00\",\"\"]},{\"searchType\":\"list\",\"field\":\"TagVarchar4\",\"values\":[\"coca cola\",\"assai\",\"pfizer\"]}]"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "perPage",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"success\": \"true\",\n    \"status\": \"200\",\n    \"message\": \"Documents listed\",\n    \"timestamp\": {{$timestamp}},\n    \"data\": {\n        \"pageState\": {\n            \"page\": \"1\",\n            \"perPage\": \"20\",\n            \"totalPages\": \"5\",\n            \"totalEntries\": \"200\"\n        },\n        \"documents\": [\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            },\n            {\n                \"documentId\": \"{{$guid}}\",\n                \"appPrefix\": \"{{$randomAbbreviation}}\",\n                \"naturalKey\": \"{{$randomInt}}_{{$randomInt}}_{{$randomInt}}\",\n                \"header\": {\n                    \"index01\": \"{{$randomBankAccount}}\",\n                    \"index02\": \"{{$randomCompanyName}}\",\n                    \"index03\": \"{{$randomBankAccount}}\",\n                    \"index04\": \"{{$randomCompanyName}}\",\n                    \"index05\": \"{{$randomPrice}}\",\n                    \"index06\": \"{{$randomInt}}\",\n                    \"index07\": \"{{$randomInt}}\",\n                    \"index08\": \"{{$timestamp}}\",\n                    \"index09\": \"{{$randomPrice}}\",\n                    \"index10\": \"{{$randomCompanyName}}\"\n                },\n                \"lineItems\": [\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    },\n                    {\n                        \"index11\": \"{{$randomPrice}}\",\n                        \"index12\": \"{{$randomInt}}\",\n                        \"index13\": \"{{$timestamp}}\"\n                    }\n                ],\n                \"status\": {\n                    \"code\": \"100\",\n                    \"name\": \"IN PROGRESS\"\n                },\n                \"deleted\": false,\n                \"version\": 1,\n                \"createdTimestamp\": {{$timestamp}},\n                \"deletedTimestamp\": null,\n                \"createdBy\": \"{{$randomEmail}}\",\n                \"deletedBy\": null\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "7f71719f-e88b-4377-8768-e06c672cb6cb"
				},
				{
					"name": "filter",
					"item": [
						{
							"name": "Operator Equals (eq)",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - Valid document with databaselocation equals 0",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5727bacf-9c8e-420f-8b14-54af084ff81a",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "8ddb2071-f133-4d99-bd46-2b10569dae49",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 0&productId=ide&page=1&perPage=5",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq 0"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "5"
														}
													],
													"variable": [
														{
															"id": "13a9992c-3614-48ee-830a-e6d998bc9fd4",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with equals a doc badly processed",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8cd389fc-6b89-4b78-ad2a-5d6afc6e1b22",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "d17bf21d-d578-4961-9a9f-6ad676c09457",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=processType eq 0 and semaphore eq 1 and databaselocation eq 0&productId=cfdi&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode"
													],
													"query": [
														{
															"key": "$filter",
															"value": "processType eq 0 and semaphore eq 1 and databaselocation eq 0"
														},
														{
															"key": "productId",
															"value": "cfdi"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "d5514799-8eeb-4c30-9a90-4c3a87fd8d7d",
															"key": "countryCode",
															"value": "mx",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with databaselocation equals 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da0b01d7-93a6-41b6-bd8d-e92e944cf3e2",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "afa1a317-d522-4884-a44c-8e91f64467ba",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 1&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq 1"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "7e6d8329-89bc-4bb3-9d0f-94312bd3bdc3",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with processType equals 0 (Outbound)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b57afcf6-a648-4078-b822-e800340f89da",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f45ec2a5-967c-41a5-9df8-ec26d7f555dc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=processType eq 0&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "processType eq 0"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "9af4b326-7f80-42f8-b0f8-067b5f14dbff",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with processType equals 1 (Inbound)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a57a14a7-c5e2-40b2-a6bd-d910302d6a91",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "8e8c619e-86ba-41ec-94bf-76961074beb5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=processType eq 1&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "processType eq 1"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "2de1ba43-fc83-4048-98dc-4a5750cff649",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with TagInt2 equals a specific document",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1280bf9b-50c8-48c1-90da-44d34d38dd35",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c665d891-bf9f-4c6f-b578-d163ba956779",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 eq 10009013&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 eq 10009013"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "2c446d3d-64e4-4eef-b9bc-a3ecc88e995a",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with TagFloat equals 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "537f1119-24cb-46a3-aa7f-94ebc5322dac",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "1c1b0c09-3029-46fc-8fca-b5e09ce216fc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagFloat1 eq 100&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagFloat1 eq 100"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "e2a1b2e9-9b52-4cd7-b04d-92dbfbe5f361",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with TagBit equals 0 (false)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6b172e2b-d26d-4814-8db6-0c8ac8abdefc",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "dabedd58-7292-4d2e-a288-8cfa837b0bf5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagBit9 eq 0&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagBit9 eq 0"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "0059b2cb-7849-45a7-adbd-646e2f38804d",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with TagBit equals 1 (true)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "468dd017-f1c5-40cb-85cb-07eef04b0835",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "701cf6c7-b001-440e-9a94-cf7c33b16cd2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagBit9 eq 1&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagBit9 eq 1"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "dc1933e4-f30e-4bb7-b87e-b97f4233b70e",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with TagDate equals a specific timestamp",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69e15ab4-bfe4-493c-850f-543eb9e48066",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "86e9d3ea-d7d9-40f0-a189-6a7bd1a3c11c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 eq 1574684896&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 eq 1574684896"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "14a3eb8e-9268-4640-b325-f3c744560998",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with TagVarChar3 equals a specifc number",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ffb47fd7-2797-4689-9108-f24cc24db7fa",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a7cf744c-d848-47fe-ad14-69fd11acb43a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagVarChar3 eq '24492961000129'&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagVarChar3 eq '24492961000129'"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "d1f941fb-5abe-4520-a1a3-bad57c697a11",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with StatusCode equals to 100",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dcb8a1b0-d007-43ce-b474-922298e4f14f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4875d5db-8e5f-438e-9af5-98b302a97dbb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=StatusCode eq 100&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "StatusCode eq 100"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "7deb322d-c8b0-4485-b8dc-a9049a9c1121",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with Sempahore eq 1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "de767597-4cae-4460-9e90-81a1bee47c65",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "fdb8ff2b-ca74-4353-8099-379e94f35e3c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=processType eq 0 and semaphore eq '1'&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode"
													],
													"query": [
														{
															"key": "$filter",
															"value": "processType eq 0 and semaphore eq '1'"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "45d30ddc-2761-4327-a429-348cc432562c",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Valid document with Sempahore eq 0",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7ad83a39-285e-44e0-b88a-c19ddf4277f4",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2a388eda-4904-46a1-a8c5-5f0cd85a3bec",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:countryCode?$filter=processType eq 0 and semaphore eq '0'&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":countryCode"
													],
													"query": [
														{
															"key": "$filter",
															"value": "processType eq 0 and semaphore eq '0'"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "a0963bce-cebc-4fe1-9475-584bf74beb4f",
															"key": "countryCode",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "4b384e8a-7658-44de-b0ed-d4495fe25c4e"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - DatabaseLocation equals a wrong valaue",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "20c2a9f5-4198-437d-8594-8aa50ef514a1",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field DatabaseLocation\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "c9b2090d-4ec6-46a2-b3a4-45d488b3956e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq xx&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq xx"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "1afafb5d-4733-45c6-87f3-f48b9538698a",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - ProcessType equals a invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d957cf7f-28b8-4e7b-91fb-301b32206327",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field ProcessType\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7ec281b0-ccf8-4861-b597-e2b3335e4d81",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=ProcessType eq 53&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "ProcessType eq 53"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "116a7a07-cd34-41b8-9a7f-fbfc50105af9",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - TagFloat1 equals an invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ca21c0d2-4cb8-4597-9f95-d4cb0567de31",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagFloat1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cd2e2c35-31eb-4f33-9bbc-645e9b2470ac",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagFloat1 eq 'xxxx'&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagFloat1 eq 'xxxx'"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "7f925205-71e5-40c9-b3b1-919bd1ce5552",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - TagBit9 equals an invalid number",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5dbb8c13-ad5d-48cf-8bb4-a94d5eb10cce",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagBit9\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "15be8f9f-5aff-464c-b44d-3926740087ec",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagBit9 eq 3&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagBit9 eq 3"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "9c1e9e18-e787-4f11-8bad-cf3094109e37",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - TagDate equals an invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8239d43e-ec6f-448b-9d58-d8bd6fc73d83",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagDate1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "878aa493-ef9a-458e-84d1-edc9ce5a7488",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 eq 12/03/1988&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 eq 12/03/1988"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "ce53ef52-2286-4efa-b73b-d940e1194b17",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Invalid parameter database",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "90791d39-f525-42d9-9f37-929d9f113290",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field BadFilter\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e2428ae8-c956-4307-9057-7d1b04583cde",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=BadFilter eq 0&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "BadFilter eq 0"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "00bbf151-19d6-42d3-a5ce-80de792173fd",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "c993dbcf-af14-4604-9a3e-d61dfe9d8e76"
								}
							],
							"id": "01f44b89-11d6-4e53-84ec-52f4e88ba8b1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d991eb70-e529-4448-9735-36346a831fe8",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fddbb455-e39f-4c4d-8737-1ca17421c145",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Operator Greater Than or Equals (ge)",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - TagInt2 greater than specific number",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5c936acd-946e-4526-ba3d-4b4432cfd6c7",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "338a3881-907f-44ec-9c74-f3f0ba060852",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 ge 10009012&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 ge 10009012"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "7b76b9b5-44ab-42cc-b8f3-6093fc43a973",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - TagFloat 1 greater than specific number ",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9171a0ea-f3d0-49ea-927d-a5838d9a10cd",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4a544e01-8228-4eec-9087-727a490b2871",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagFloat1 ge 1000&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagFloat1 ge 1000"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "f2684de7-d591-459d-877d-399e4a7e955c",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - TagDate1 greater than X timestamp",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "edd30e76-7828-4372-93a4-9becbd6d5da6",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "e4c5dfb0-6434-488e-b32c-46c787d99b9a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 ge 1574252896&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 ge 1574252896"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "1aaebe50-4db9-4262-9070-9c321028f66b",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "f583e480-a0d0-4c5d-8818-5c136d3eee0b"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - TagInt2 greater than invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ecc3c800-13ce-4288-a54c-eaf2efe4c5e5",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "500c71de-6f4a-42e5-b420-e597340f9ff1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 ge teste&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 ge teste"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "99d83a62-ee03-4acc-83bf-ab8db184da3b",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - TagFloat1 greater than invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "92ea8eb2-0741-4ef1-8c12-1cd89b9cbef7",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagFloat1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "95124c51-ddcf-4cd7-bbc4-f3f26b952297",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagFloat1 ge teste&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagFloat1 ge teste"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "07bb08cc-da27-4739-8144-04ef9b4cff30",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - TagDate1 greater than invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "271020e8-36b4-4b44-b777-811ce12e9a55",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagDate1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "36acd707-b719-421a-941c-734d6cbcf6a3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 ge teste&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 ge teste"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "2c24f563-3ae1-4a6f-b058-8d8229da3b2e",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Field with greater than a empty value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b1a7a5b8-89cf-410e-a941-95d762c27aeb",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagDate1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "81768a7c-341b-422c-9c37-8182b71fa509",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 ge &productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 ge "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "1b6c7043-b30f-4d4e-bbf8-2ce5564d1e82",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "3f7fefb3-b2f0-4680-962a-694fc3882dc2"
								}
							],
							"id": "d165d998-2cbd-4d81-be0c-1bdd58f33aa3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "405181fc-7d69-4688-8b74-77955437fd07",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "743d41be-54ba-4a1e-a4d4-c2e944935d98",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Operator Less Than or Equals (le)",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - TagInt2 less than a specific number",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3635e901-1bdc-4634-ac0b-02cfbb202d2f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ab38f77d-393e-48a7-83de-cb24295fb3e4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 le 1000&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 le 1000"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "c5de937c-e15c-4302-8ebd-a7c493cb86dc",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - TagFloat1 less than a specific number",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0fbe7d74-56e9-4b62-9059-cdccd9c34ed3",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ec0d6565-a222-48f2-bfc6-5fddc5de76e0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagFloat1 le 150&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagFloat1 le 150"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "ca993552-cc0f-4d0c-96f1-280c6b544f67",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - TagDate1 less than a specific number ",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bce855e1-26f7-4e76-9d50-235dadde1b88",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cf9f10b9-d7e6-4027-a44e-44e59f4b7fb9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 le 7575116896&productId=ide&page=1&perPage=3\n",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 le 7575116896"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3\n"
														}
													],
													"variable": [
														{
															"id": "dfd91c35-3bff-46b1-8e83-03fadbaabfc6",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "8c86d854-1c6d-4971-adff-cc407f53b5b3"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - TagFloat1 less than a invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f75975ae-d95f-4b2f-a2c3-798d00edbe30",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagFloat1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "265b0142-45b6-4974-8956-008ccda08e5c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagFloat1 le teste&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagFloat1 le teste"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "8300003b-d154-4d6d-b28c-a45319c14df4",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Tagint2 less than a invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "be9ecafc-0789-4e89-a23c-be317efabe3a",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0a1844d2-23d3-454e-9f73-a7b3de914d6d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 le teste&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 le teste"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "1e9e320e-7cc7-4f8c-b0a4-db08b2980663",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - TagDate1 less than a invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9eb55699-21a8-423e-ac9b-e0d6e4aa36e6",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagDate1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ef00772d-e058-43f1-afe4-1e0df60adb35",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 le teste&productId=ide&page=1&perPage=20\n",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 le teste"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20\n"
														}
													],
													"variable": [
														{
															"id": "c3dc8e47-e36a-45ca-9c9e-9366b725367e",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Field with less than a empty value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d691af7d-151f-49ed-9eb3-7a23d1053716",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field Tagint2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7691c653-235a-49a6-9a7e-68d978bc2474",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=Tagint2 le &productId=ide&page=1&perPage=20\n",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "Tagint2 le "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20\n"
														}
													],
													"variable": [
														{
															"id": "9e957300-a474-47b3-805f-e5a29e374d81",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "9d5ce45c-3b99-4291-9a06-c8e237e1537f"
								}
							],
							"id": "f2a4e3b7-6e5f-46d5-9f23-a3fd25e8a80d",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6a8b013f-4e26-4059-892b-5683f7971522",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9dd03c73-9850-4e5c-a9cc-49c5e457dd36",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Operator Logical And (and)",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - TagInt2 filtered by ge AND TagIn3 le",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c7ebccfc-fbb5-44dd-ac67-62e0bc832e31",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "556dc7c7-49e6-4056-bee0-47e049f818f0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 ge 10009012 and TagInt3 le 5&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 ge 10009012 and TagInt3 le 5"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "6a2d8a06-00d3-4a23-9f0b-c88742e022eb",
															"key": "country",
															"value": "ar",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Between filtered by ge TagDate1 AND TagDate1 le",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d98ecbb-fc3d-4114-8db7-bd8387e6dec5",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7f5a7d9e-5485-4c8c-b893-61310138f8e6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=ProcessType eq 0 and TagDate1 ge 1587743883 and TagDate1 le 1587743883&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "ProcessType eq 0 and TagDate1 ge 1587743883 and TagDate1 le 1587743883"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "fb8dbdbf-af95-42b8-9b19-085adb8afc5b",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Between filtered by ge CreationDateUTC AND CreationDateUTC le",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47a98057-10a8-486d-b84b-472dd686595d",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f91736a8-f96f-494b-9c0c-6ea0eab8b075",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=ProcessType eq 0 and CreationDateUTC ge 1587736590 and CreationDateUTC le 1587736590&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "ProcessType eq 0 and CreationDateUTC ge 1587736590 and CreationDateUTC le 1587736590"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "a82e7775-0e94-4837-9770-7262f88c7273",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - TagFloat1 filtered by ge AND processType eq 0",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5202c15e-d1bc-4f7b-8b13-19c2d5fc7041",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3afb2061-8baa-4cc3-bff7-803702f327f0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagFloat1 ge 99 and ProcessType eq 0&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagFloat1 ge 99 and ProcessType eq 0"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "c845acac-36c2-4972-9ce6-3c76a4268229",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - TagDate1 filtered by ge AND le (between)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c297af81-2120-4a71-8ee2-62bf9b04f93f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "cc53ce3e-54e6-4874-a655-ef98116f1f01",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagDate1 ge 1574252896 and TagDate1 le 1575116896&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagDate1 ge 1574252896 and TagDate1 le 1575116896"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "a9567268-e808-40c0-9711-1b77a2073627",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by multiple fields with AND operator",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "93a4b227-6500-4e8c-8f30-8234aa0a1f28",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a49d954b-1684-454d-b3a1-7b563b7d0a99",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 0 and ProcessType eq 0 and CreationDate eq 1574767868 and Semaphore eq 1 and OwnerSearchCode eq '10726059000115' and ReceiverSearchCode eq '24492961000129' and TagInt2 eq 10009013 and TagFloat1 eq 100 and TagBit9 eq 0 and TagDate1 eq 1574684896 and TagVarchar3 eq '24492961000129'&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq 0 and ProcessType eq 0 and CreationDate eq 1574767868 and Semaphore eq 1 and OwnerSearchCode eq '10726059000115' and ReceiverSearchCode eq '24492961000129' and TagInt2 eq 10009013 and TagFloat1 eq 100 and TagBit9 eq 0 and TagDate1 eq 1574684896 and TagVarchar3 eq '24492961000129'"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "a48b444b-3b16-45e1-827e-7ba29d25bb01",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "b877391a-558b-4cd5-b0f9-af3863677c29"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - TagInt2 filtered by ge AND an invalid parameter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ece9f48a-991c-4c6a-9ef5-16ec69a7b6bb",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt3\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "57e7b2c8-b103-4648-9c1b-12cbb8864dbb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 ge 10009012 and TagInt3 le x&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 ge 10009012 and TagInt3 le x"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "e3ab5a2d-1df2-46d7-b1d3-7944a5e27631",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - TagInt2 filtered by AND an TagVarchar empty",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a72877f2-d83a-4877-b9b4-834b58b7084f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"The following filter 'TagVarChar3' cannot be parsed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "311ac00e-b9fa-4232-b308-2f031aa7037b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=TagInt2 ge 10009012 and TagVarChar3&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "TagInt2 ge 10009012 and TagVarChar3"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "7e24c6c0-6dde-499e-979a-73b096e783b3",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "5557e023-1f55-49f1-9abd-dd62ff209bc7"
								}
							],
							"id": "09638542-d4e2-4318-91a5-15f1fa0a4f4d",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "582dc828-f836-4d47-b301-d4b66183bcf2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "123135d4-42ca-4745-aa0b-0e80d93e3152",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Operator Starts With (startswith)",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - Document filtered by startswith on a TagVarchar field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ec4d23f0-677d-46d9-a58b-653460989dca",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "53bf4d80-3580-492d-a384-a77d9b9091ae",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagVarchar3, '244')&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagVarchar3, '244')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "98b9c0b0-8911-4a67-8c29-88d40c71f197",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by startswith on a string field without value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "933a7111-63ad-4592-810f-8ca3a52a2b6a",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "8de6a56d-2348-4918-8303-be1d3b7a5096",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagVarchar3, '')&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagVarchar3, '')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "1e69dd19-4bb4-4882-8fd9-9dd05bc02fc3",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by startswith on a TagInt2 field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "da8a2805-a0b8-4c8c-ab0c-9c5b0091116a",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "62c773d0-b0f6-494b-a8fb-53a5b6f83d7a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagInt2, '2')&productId=ide&page=1&perPage=3",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagInt2, '2')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "3"
														}
													],
													"variable": [
														{
															"id": "7f91539f-3912-4103-bc8a-2bad73751196",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by startswith using two fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e10490a5-4cf5-48e5-9bf0-d364f0f0804c",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7c5eb9a6-1d7b-4fad-b638-bdf90d02b2b2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagVarchar3, '24492961') and startswith(TagVarchar2, 'Filial São Paulo')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagVarchar3, '24492961') and startswith(TagVarchar2, 'Filial São Paulo')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "7c87848f-af93-4f3d-bbee-8c13af82982d",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered using startswith + endswith",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "073c235c-7cee-40f8-88e2-2494ff07d347",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "623bf2f5-be32-4ef3-bd51-2c4a8ef77024",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagInt8, '1') and endswith(TagVarchar2, 'LTDA') and DatabaseLocation eq 0&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagInt8, '1') and endswith(TagVarchar2, 'LTDA') and DatabaseLocation eq 0"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "dc14b2af-b132-4086-a8e4-bce20fcd8d6e",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "44554ab9-c62a-4772-8710-503fdbf6129a"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - Startswith a field with a invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33075f3d-80e1-43e0-9594-332e70d4e1f6",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagFloat1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "7fabcec9-fd0f-4df7-88f7-119c600fd61a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagFloat1, 'text')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagFloat1, 'text')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "8f6c4a00-c14a-4bb5-af12-b3c1e6684b0e",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Startswith a field without value (TagInt2)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c43f22b8-f331-4ccd-8c9b-8743e5d36657",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "836ed3af-7311-4fc7-a859-8484b04155f2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagInt2, '')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagInt2, '')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "f32985ac-740e-443c-aa77-805476a491d9",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Startswith a field without value (TagFloat1)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2d53fb19-89e6-42e3-bc3c-ff39dcf84e90",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagFloat1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4e915a0b-e5f7-4380-8442-4c2437c024db",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagFloat1, '')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagFloat1, '')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "2be5474a-c67e-4279-9aff-be5060a2be20",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "b0b034eb-205d-48e7-bcd5-b1b53cbc6957"
								}
							],
							"id": "a7e6c2f9-11b2-48b5-8cff-0cb914ad74af",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4efb3e0c-2ffa-4488-81c1-97a12e860a2a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8853796c-3ac5-480e-8b67-e212607209b6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Operator Ends With (endswith) ",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - Document filtered by endswith on a TagVarchar field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd792935-2204-4c61-a2b5-dab059e6b65a",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "b9b24bc5-8881-4434-bf05-0bd194ab003f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=endswith(TagVarchar10, '0131612701044')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "endswith(TagVarchar10, '0131612701044')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "6b5566ec-6b03-4c65-8a5a-919887a5c3d3",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by endswith on a TagInt field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "85328017-05ab-4ee2-bc74-8532bc02e845",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "f80043f2-2c67-4cec-a967-5054f31c2806",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=endswith(TagInt2, '9')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "endswith(TagInt2, '9')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "a8e555c0-7786-4335-a9f4-4cb0cbd46a43",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by endswith using two fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "920fe4e7-a62b-4dcd-acaf-d575df19643f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a27bd5f6-5633-4c38-868a-19b9cda5e26e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=endswith(TagVarchar10, '0131612701044') and endswith(TagVarchar4, 'SEM VALOR FISCAL')&productId=ide&page=1&perPage=20\n",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "endswith(TagVarchar10, '0131612701044') and endswith(TagVarchar4, 'SEM VALOR FISCAL')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20\n"
														}
													],
													"variable": [
														{
															"id": "3d8b3d4e-7106-4256-bcbe-930e40c1a42a",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered using startswith + endswith",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f65457ab-6bd5-4740-a844-ea7d9469d3bc",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "9e8a0dac-f343-4b57-9444-c1348d619ab2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=startswith(TagInt8, '1') and endswith(TagVarchar2, 'LTDA') and DatabaseLocation eq 0&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "startswith(TagInt8, '1') and endswith(TagVarchar2, 'LTDA') and DatabaseLocation eq 0"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "5a91bd66-7641-49b6-881f-cf1fe7738459",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "760bde12-087c-4fe7-b8ac-35036c91bbc2"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - Endswith a field without value (TagInt2)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f74518a8-bc80-4615-be29-4fc9b51e1b5f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3341ab73-8312-4f53-81e9-058226675940",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=endswith(TagInt2, '')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "endswith(TagInt2, '')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "74e8133b-9835-4bda-a665-32adce623e64",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Endswith a field without value (TagFloat2)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66ed5452-6217-4258-a4e5-90d1e74c3356",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagFloat1\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "0a280096-d877-4644-8007-f55c047ae90d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=endswith(TagFloat1, '')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "endswith(TagFloat1, '')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "aa38a3dd-cf1d-4e50-b9ab-f6bcd5754fb5",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Endswith a field with invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ce7ab3a-e26a-4545-a8cd-3dcdd4bba084",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a4550ce7-2e0e-4e8d-baf8-f59596807160",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=endswith(TagInt2, 'text')&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "endswith(TagInt2, 'text')"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "5e9d264d-310a-445f-b31e-a9367bfa9ca4",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "699cd4f6-b39f-42bc-94d0-6ef7d5f7131e"
								}
							],
							"id": "ea34060a-19e8-4c59-b707-a17dd60a437b",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a846be72-cd79-49b9-b508-a2b17805d665",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "942e8588-8647-4d57-8a0b-0367600dcab3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Operator Contains (contains) ",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - Document filtered by contains on a TagVarchar field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6d10c5d6-6491-499e-9996-7ec961daece1",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a48d22e5-84be-4e8a-a9ba-6502bfc48393",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=contains(TagVarchar3, '260590001') &productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "contains(TagVarchar3, '260590001') "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "a9da6544-85ae-4218-91d4-04f94537a010",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by contains on a TagInt field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ec6b6845-1db4-451f-9613-413b1e67195f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "2c269df0-bb61-4171-b84e-7dbe55587745",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=contains(TagInt2, '2') &productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "contains(TagInt2, '2') "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "05d67ed6-a95b-4102-9f38-0abc93c4f199",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered by contains using two fields",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0c90cf6f-697a-42fc-8d0d-c9007d21e58e",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "99de5161-2f3c-4667-86c9-0735af167dfa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=contains(TagInt2, '1234567891') and contains(TagVarchar4, 'AMBIENT') &productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "contains(TagInt2, '1234567891') and contains(TagVarchar4, 'AMBIENT') "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "a3580319-c051-45f5-8b40-9202eb977b9f",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "de513c21-3a37-4a8d-a84c-aa5ae0458ee6"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - Contains with a field without value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b68fef72-8059-4496-a380-964c16fbc2ea",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field \");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "507aaf2a-2191-4929-b657-783b2e715639",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=contains(, TagInt2) &productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "contains(, TagInt2) "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "256b0386-1a56-4ff9-8de3-01845614d96d",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Contains with a field with invalid value",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3e739450-e571-470c-9197-711a2ba23e4d",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field teste\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "ac94e4e0-5093-458d-beae-8121df123784",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=contains('teste', TagInt2) &productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "contains('teste', TagInt2) "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "37cb66b8-310a-41c0-bc79-4df2ca4a0013",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Contains using two fields with one invalid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "777d0c8e-9ee7-4e83-8278-a6fd8a38b6ee",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field São Paulo Filial\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "635cf3b1-5549-46e3-9791-3fa772144b20",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=contains('São Paulo Filial', TagIn2) and contains('AMBIENTE DE HOMOLOGACAO', TagVarchar4) &productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "contains('São Paulo Filial', TagIn2) and contains('AMBIENTE DE HOMOLOGACAO', TagVarchar4) "
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "92601f1c-804a-4814-b37e-355efc0e229b",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "3f70c06e-7137-4316-8358-ce6bfcd4d84e"
								}
							],
							"id": "c028d810-f25a-4c32-bc86-d8f26d6baa62",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f4c23cc8-6727-4042-a4d7-c60230e74303",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "572fcbea-0c1e-4df6-a283-812ed8542de0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Operator Logical Or (or) ",
							"item": [
								{
									"name": "positive",
									"item": [
										{
											"name": "200 - Document filtered with multiple parameters (TagInt2)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "81eed2f9-1559-42dc-b5ca-88ddf8818302",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "4a66370a-e05e-4817-9ff1-570acd97194b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 0 and (TagInt2 eq 17218175 or TagInt2 eq 10009019 or TagInt2 eq 10009024 or TagInt2 eq 10008129 or TagInt2 eq 10009005 or TagInt2 eq 10009021)&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq 0 and (TagInt2 eq 17218175 or TagInt2 eq 10009019 or TagInt2 eq 10009024 or TagInt2 eq 10008129 or TagInt2 eq 10009005 or TagInt2 eq 10009021)"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "33a47aae-1784-46f5-86b3-b6d60f25c222",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "200 - Document filtered with multiple parameters (TagVarChar3)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1fa7a144-e37e-4db8-a35e-657af560bc52",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    pm.expect(jsonData.status).to.eql(200);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(true);\r",
															"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "06e2d725-f26f-464d-b8b2-464b1d5451bd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 0 and (TagVarchar3 eq 24492961000129 or TagVarchar3 eq 24492961000128 or TagVarchar3 eq 24492961000127)&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq 0 and (TagVarchar3 eq 24492961000129 or TagVarchar3 eq 24492961000128 or TagVarchar3 eq 24492961000127)"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "f5e62b6a-1d2e-4a7a-9151-37499996e340",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "c9afdf3e-f394-4538-8653-f82a309b0c91"
								},
								{
									"name": "negative",
									"item": [
										{
											"name": "400 - Multiple parameter using or with one invalid (TagInt2)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6e1fa7ae-3bda-4198-8638-88922131fe79",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "3fdb95c7-4bb5-4b38-af90-b7f7b9a6b4fa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 0 and (TagInt2 eq 17218175 or TagInt2 eq 10009019 or TagInt2 eq 21930X or TagInt2 eq 10008129 or TagInt2 eq 10009005 or TagInt2 eq 10009021)&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq 0 and (TagInt2 eq 17218175 or TagInt2 eq 10009019 or TagInt2 eq 21930X or TagInt2 eq 10008129 or TagInt2 eq 10009005 or TagInt2 eq 10009021)"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "d58fadbc-37d0-4dc3-a579-f5c174e16602",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "400 - Multiple parameter using or with one empty (TagInt2)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "cd1a3c9e-9c8c-4b85-8806-d1aa697ec16c",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"    pm.expect(jsonData.status).to.eql(400);\r",
															"});\r",
															"\r",
															"pm.test(\"It should return general payload.\", function() {\r",
															"    pm.expect(jsonData.success).to.eql(false);\r",
															"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
															"     pm.expect(pm.response.text()).to.include(\"Invalid field TagInt2\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
															"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "76587af8-c10f-4e8d-ab41-969130b063b4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bff.authorization}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 0 and (TagInt2 eq 17218175 or TagInt2 eq 10009019 or TagInt2 eq  or TagInt2 eq 10008129 or TagInt2 eq 10009005 or TagInt2 eq 10009021)&productId=ide&page=1&perPage=20",
													"host": [
														"{{bff.url}}"
													],
													"path": [
														"api",
														"v1",
														"documents",
														":country"
													],
													"query": [
														{
															"key": "$filter",
															"value": "DatabaseLocation eq 0 and (TagInt2 eq 17218175 or TagInt2 eq 10009019 or TagInt2 eq  or TagInt2 eq 10008129 or TagInt2 eq 10009005 or TagInt2 eq 10009021)"
														},
														{
															"key": "productId",
															"value": "ide"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "perPage",
															"value": "20"
														}
													],
													"variable": [
														{
															"id": "68cf99cc-1739-4597-8660-daa05605871f",
															"key": "country",
															"value": "br",
															"type": "string"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "7a21b402-e296-4493-a5f3-f4d3e9eb251e"
								}
							],
							"id": "d94f6bc6-79e4-4e98-807e-d249b13013aa",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0dd5ab75-093b-4fb4-8455-540b7613606a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e74f945a-c3e6-4a22-a70b-17ee2b43e2f1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "200 - Document filter with all operators (eq, ge, le, and)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81ba3e2b-fe3b-4fda-8787-3b4ad5566285",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData.status).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"It should return general payload.\", function() {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
											"\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "222f478a-216f-4599-b84d-14c178efba04",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{bff.url}}/api/v1/documents/:country?$filter=DatabaseLocation eq 1 and ProcessType eq 0 and CreationDate eq 1574767868 and Semaphore eq 1 and OwnerSearchCode eq '10726059000115' and ReceiverSearchCode eq '24492961000129' and TagInt2 ge 10009012 and TagInt2 le 10009015 and TagFloat1 ge 99 and TagFloat1 le 150 and TagDate1 ge 1574252896 and TagDate1 le 1575116896&productId=ide&page=1&perPage=20",
									"host": [
										"{{bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"documents",
										":country"
									],
									"query": [
										{
											"key": "$filter",
											"value": "DatabaseLocation eq 1 and ProcessType eq 0 and CreationDate eq 1574767868 and Semaphore eq 1 and OwnerSearchCode eq '10726059000115' and ReceiverSearchCode eq '24492961000129' and TagInt2 ge 10009012 and TagInt2 le 10009015 and TagFloat1 ge 99 and TagFloat1 le 150 and TagDate1 ge 1574252896 and TagDate1 le 1575116896"
										},
										{
											"key": "productId",
											"value": "ide"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									],
									"variable": [
										{
											"id": "296ca049-0623-4784-8f41-c7ea2fac3207",
											"key": "country",
											"value": "br",
											"type": "string"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "1f0e9838-d04e-43c3-80ba-29d81b5efe21",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "53b4d189-9569-4dba-8d28-f9fb0888bd96",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b5465d34-c51c-4a56-a8c4-57143c0f5ca6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "attachments",
					"item": [
						{
							"name": "200  BR - Valid document with attachments - IDE (PDF E XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be13fcc4-b19e-43b7-a947-6a5df7338bc7",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"nfeProc\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"NFeBR200ReceiveDefault\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "821acaa4-b305-4d30-a48c-b9b347cca2c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/040f6894-30d0-4a92-b674-290e4b655aa5/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - CancNFE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6deecc78-6a49-4526-b8cc-da5570cf5ee3",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"cancNFe\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a4e4ed7c-a7f1-44c9-9a52-7f8ea2444e7c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/BEA4C540-5C9B-40FB-99C2-3750E56BDDA9/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - NFSE (PDF E XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c41275bf-7415-4d16-bed4-a50f913150de",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"NFSe\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"    pm.expect(pm.response.text()).to.include(\"NFSeBRReceiveDefault\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "50c56961-095d-43fb-8729-1386c1a3c3e2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/14c6a974-0500-4a82-b2d9-7e386c2be62b/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - NFSE Pedido Cancelamento(PDF E XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "567e99a8-4717-4c73-9758-22c5ead94d5e",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"NFSe\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"    pm.expect(pm.response.text()).to.include(\"NFSePedidoCancelamento\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0245534b-23b8-4831-ab7a-fa0d29c5a30a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/AE9E3EF0-F763-4B9C-B145-CE1F476343B3/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - CTE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "da589219-546e-4b53-8daf-0ab9acae9469",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"cteProc\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a0922bfb-c6d8-4907-8feb-bfc60aa9a2cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/90d5654b-45c9-47ea-b541-1561b15e5235/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - CTE (XML) Stored",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9fcbfd73-935f-44c9-85e9-8456b629d780",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"cteProc\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d6aa45ca-8e9f-44d0-8431-3b57519e8efc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/21b9995f-0865-4666-ac73-041ca56b8018/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - CTEOS (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4109b941-ed55-4a1e-9791-9da4759df20c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"cteOSProc\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d13b69b8-754c-4fb9-80b9-3b3dd93e52a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/09159B44-9480-463F-918A-22627E84F36F/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - MDFE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7977535a-30b9-486f-8e5c-490384e3d8d1",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"mdfeProc\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d90d29d7-ebb8-40e0-a1f8-3349dc6e64f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/8F09E40C-9645-40DA-9806-08C552EC486D/attachments"
							},
							"response": []
						},
						{
							"name": "200  BR - Valid document with attachments - Evento CTE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "966cc6c6-10fd-45bf-bc16-7b86ab7548ed",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"eventoCTe\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1c7300e2-9d8e-40bc-a75e-454a0df60d45",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/7BA6E625-CFA6-4789-B3D8-519CB40C2550/attachments"
							},
							"response": []
						},
						{
							"name": "200  MX - Valid document with attachments - CFDI (PDF e XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06143f54-79ca-4f1e-b58f-2ff21b060787",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"CFDI32Default\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"    pm.expect(pm.response.text()).to.include(\"ComprobanteStorage\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e38f5666-26e8-4655-9167-50c5f9acddcb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/mx/f085459d-008f-4d6d-a0c5-a54a27a4ce12/attachments"
							},
							"response": []
						},
						{
							"name": "200  MX - Valid document with attachments - cancCFDI (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "597aa504-34f9-4f98-a3b4-c270e47dafcf",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"cancCFDI\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5e866e94-53d2-41c6-839d-174b7672477a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/mx/70B77862-1E41-4AA1-B13B-A68D4E2FD665/attachments"
							},
							"response": []
						},
						{
							"name": "200  EC - Valid document with attachments - FacturaEC (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cc682cd-68f6-45b4-a1f7-ca820d6585f3",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"factura\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5aa7a172-d30d-4132-bf4b-50f3d1a2107e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ec/a29bd23e-ec94-4d79-b484-3b43b79fec16/attachments"
							},
							"response": []
						},
						{
							"name": "200  EC - Valid document with attachments - FacturaEC (PDF)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "64325d86-9c9f-496d-89e7-ac7dab25ecce",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function () {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"ECDefault\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"    pm.expect(pm.response.text()).to.include(\"factura\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ad71b5e3-6e61-4ef0-b5e6-dfb9e2c905a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ec/02befdf3-0ad3-4f0e-8afc-5b81c2af69c9/attachments"
							},
							"response": []
						},
						{
							"name": "200 CL - Valid document with attachments - DTE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58059841-1914-48e1-a3fc-6d99a1a4d82c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"EnvioDTE\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "df0059c6-4c9f-4544-a083-c08d69684172",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/0d5f1b29-4388-4971-942c-d5b0b8ca29c8/attachments"
							},
							"response": []
						},
						{
							"name": "200 CL - Valid document with attachments - DTE (PDF)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3945b914-9303-4704-9c1b-ca4e4a499b0e",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"DTE\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "78c5e73f-99f3-4c44-b635-b32a412a703b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/fd2fa25c-d8b7-4980-af13-6820c07a0d7f/attachments"
							},
							"response": []
						},
						{
							"name": "200 CL - Valid document with attachments - Resultado ENVIO DTE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e02f4cb-be35-4566-bcc6-0ba24ebb0413",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"RESULTADO_ENVIO\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "10d77318-955e-4d4b-8989-aaba7bfd3cb3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/69A9A4CC-8319-45BC-AA43-D35C388FF742/attachments"
							},
							"response": []
						},
						{
							"name": "200 CL - Valid document with attachments - LibroCompraVenta (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f5a5313-a3db-4d6f-981b-f9eac24e5df8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"LibroCompraVenta\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "213dfabb-8e79-4940-8041-0595c72fdc74",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/C3729F7A-52A8-4161-B9BD-F542600710A6/attachments"
							},
							"response": []
						},
						{
							"name": "200 CL - Valid document with attachments - Resultado ENVIO Libro (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16e66d65-820a-4a4f-94a8-c854f5677981",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"LibroCompraVenta\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "653596be-f072-4e43-b55c-29b12c514873",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/4D2B5C76-FBE7-48FC-AE30-F114AE85F683/attachments"
							},
							"response": []
						},
						{
							"name": "200 - CRI - Valid document with attachments - FE (XML E PDF)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "141ad811-856a-4ffe-bed7-25d5e2fe9ea2",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"InvoicePDF\");",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "801c9d7e-97a0-4dfe-b8e9-13978f289e6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cr/b9be3bd1-e4a1-44bd-9bd7-7da81c6b43ff/attachments"
							},
							"response": []
						},
						{
							"name": "200 - CRI - Valid document with attachments - NDE (XML E PDF)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee58ed84-bdb1-41b0-99bb-c627f6c54f19",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"InvoicePDF\");",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "702764c2-11a1-4bff-9a2a-ad3aefb2788f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cr/56d11895-6f92-4f44-9e31-992e38c88f05/attachments"
							},
							"response": []
						},
						{
							"name": "200 - DOM - Valid document with attachments - NE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0250909d-d626-4043-9f2c-6e8bc5674e91",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b67621cf-de0b-4778-8eeb-84c1a8b65460",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/dom/bc60d2ac-3d22-49b5-a895-d879d5a92bde/attachments"
							},
							"response": []
						},
						{
							"name": "200 - DOM - Valid document with attachments - NCE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0e1f16a-094b-4f70-ad6a-eaebc7e1d200",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0757d251-611c-481e-8f34-d0c12c77eef0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/dom/9a247b67-4230-4257-9dfe-5a8645481c3e/attachments"
							},
							"response": []
						},
						{
							"name": "200 - DOM - Valid document with attachments - NDE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ffab4271-1fb3-4167-818c-c5c7b3000e1d",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "48767ae6-f0a7-4361-9809-28f4d072aac5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/dom/69396524-e59b-47c8-9541-62f84b202768/attachments"
							},
							"response": []
						},
						{
							"name": "200 - AR - Valid document with attachments - CAEA (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52e229ae-840b-4ce1-a7c3-a5cdd205d4bc",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"caea\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1c47da35-faa3-4fa0-baa7-0b40b1292ecf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ar/005912BC-9EA1-44F6-A8A2-BAE1649AE911/attachments"
							},
							"response": []
						},
						{
							"name": "200 - AR - Valid document with attachments - FEAuthorize (XML E PDF)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae83be2c-59cf-4a23-8733-5c4678269908",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"FEAuthorize\");",
											"    pm.expect(pm.response.text()).to.include(\"FEmtxDefault\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d320541f-34e5-4cb0-977d-a9e0636013c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ar/2c8186cd-5b7b-445e-ac46-ac85ddca2d8d/attachments"
							},
							"response": []
						},
						{
							"name": "200 - PE - Valid document with attachments - PER BOL (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f50ff1cc-33c6-4f72-881b-6e6cc976ba8c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f0e79401-c418-4c81-a805-9c3d90eff419",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/B6C57156-EC13-4B73-8573-9BFDA612F73D/attachments"
							},
							"response": []
						},
						{
							"name": "200 - PE - Valid docment with attachments - PER CRED (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76fc325e-c9aa-4edc-aa58-2ae954fca201",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c9f93246-a40c-41dd-bd40-1dcfed139143",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/4E96598B-4A82-4B53-A4E7-589402AA3F70/attachments"
							},
							"response": []
						},
						{
							"name": "200 - PE - Valid docment with attachments - PER CRED (PDF)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "51ee62f1-1bd3-4e8a-ace9-9608ef9ace37",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"InvoicePDF\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6baf7d06-7f32-42b2-9fc9-7b37443bf1ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/833a8b2a-e209-4314-a26b-4408ce668d90/attachments"
							},
							"response": []
						},
						{
							"name": "200 - PE - Valid document with attachments - Comprobante PE (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d393e375-bc7a-4219-972d-4db6f95c9bc9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"comprobante\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "98ede3cb-552c-41d9-b708-59e42efb2824",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/29A9B253-CFC1-4B09-8228-80F90932FF59/attachments"
							},
							"response": []
						},
						{
							"name": "200 - UY - Valid document with attachments - CFE (PDF)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c181b7a9-657f-4a26-b841-78cc0a8c74e6",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal PDF and XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"CFEReceiveDefault\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d1eea38b-4736-43e5-9798-56c3cac11c15",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/uy/d62f9ad2-1175-468d-ba62-cf69941cca46/attachments"
							},
							"response": []
						},
						{
							"name": "200 - CO - Valid document with attachments - COL FAC (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c948c9e-4e1c-4356-b685-a6a3b3eba02c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "56db3934-453c-443b-8e45-93a63ae32eb0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/co/C212D83C-ED6E-4774-8DA5-043FF41BB1CC/attachments"
							},
							"response": []
						},
						{
							"name": "200 - ES - Valid document with attachments - VAT Invoice (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41674e75-0c16-41c2-bf3e-89dfeb657995",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"VATInvoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7945dd10-1e00-4cb6-808b-45002fac9d9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/es/22A5BEAF-E63B-42B8-A7FB-678230EFAEF6/attachments"
							},
							"response": []
						},
						{
							"name": "200 - IT - Valid document with attachments - FAT (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "acea373b-8505-4cc9-83b6-d09ed74d60db",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2b43ab8f-dc25-4388-8794-5d086a7712ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/it/F9929020-03CD-4B8E-954B-43CFD8E54F12/attachments"
							},
							"response": []
						},
						{
							"name": "200 - HU - Valid document with attachments - HUN Sales (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f21e950a-15fa-4d58-9163-cb6c8e415af5",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d9fac3cd-6304-420f-b711-8c3e143a89fa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/hu/6A2743E3-DA28-4311-B986-71A65F2C1249/attachments"
							},
							"response": []
						},
						{
							"name": "200 - CI - Valid document with attachments - CNI Sales (XML)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29f1a8bc-e464-44e4-bb74-5204ee38b6ef",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should have the principal XML\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invoice\");",
											"    pm.expect(pm.response.text()).to.include(\"header\");",
											"    pm.expect(pm.response.text()).to.include(\"label\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c8b004f0-be17-47f5-a945-7ca3bfc70772",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ci/0D96D0DE-6F66-429C-A3A6-526CF30FC755/attachments"
							},
							"response": []
						},
						{
							"name": "200 - Valid document without attachments",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "00bf4253-013f-4dba-b38c-4f4492f501b7",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document attachments returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fcc7db27-07e4-418e-90bb-b71599c4357a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/719e009e-1fd7-45d7-9188-de8057a27bf5/attachments"
							},
							"response": []
						},
						{
							"name": "400 - Document don't belong to country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e0206da8-d344-4dc3-9012-5b1d198315f4",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(jsonData.status).to.eql(400);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Bad Request\");",
											"     pm.expect(pm.response.text()).to.include(\"This document type does not belong to this country\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8232bafc-beaf-4acb-824d-7f74ed407a2e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/0689A7F1-9361-40B4-991C-4ACACC1F1B97/attachments"
							},
							"response": []
						},
						{
							"name": "404 - Request with invalid documentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d49b3a3b-b2cf-4f62-bb42-9bd61f8ebc91",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Not Found\");",
											"     pm.expect(pm.response.text()).to.include(\"Document attachment not found.\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7b497bd2-0420-43eb-9e60-d44eb4ec0fd8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/1231420c-8d2e-4cbf-a07a-0560867f0231/attachments"
							},
							"response": []
						},
						{
							"name": "401 - Invalid Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "99e0ddad-8bd2-4e7a-a3ba-332fa68ba498",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"    pm.expect(jsonData.status).to.eql(401);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Invalid credentials\");",
											"     pm.expect(pm.response.text()).to.include(\"Invalid credentials\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "329f057b-8599-4c3c-b955-81fed3ca966c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/f085459d-008f-4d6d-a0c5-a54a27a4ce12/attachments"
							},
							"response": []
						}
					],
					"id": "c591fc10-3f66-4e99-831a-fa4009b29ce8"
				},
				{
					"name": "statuses",
					"item": [
						{
							"name": "200 BR - Document IDE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b8d052e-f01e-4099-a937-afaa11f5540c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a5f4669d-f6bb-47f2-a4f6-9bed67e94930",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/79734134-c955-49a9-bd36-34a7fa468b8b/statuses"
							},
							"response": []
						},
						{
							"name": "200 BR - Document NFSE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "972acc42-58f4-4fa7-9f4a-ef086cca7bdd",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0f0682be-4767-4a84-93eb-767f3db92b52",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/a67010f0-e3c1-41ca-a322-5283fa60a17b/statuses"
							},
							"response": []
						},
						{
							"name": "200 BR - Document NFSEPedidoCancelamento with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8796e959-6a52-4dfe-b906-91fa9260811a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c76a96f4-201d-4eec-81e3-4ce7df658826",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/AE9E3EF0-F763-4B9C-B145-CE1F476343B3/statuses"
							},
							"response": []
						},
						{
							"name": "200 BR - Document CTE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "59c324dc-07d0-4ba2-aa72-d579ec4d34ac",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "38adfb21-fa4f-4cc1-b96e-f0a885861429",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/bcf8b5a6-f28f-43e4-a652-8ef575f7d3d7/statuses"
							},
							"response": []
						},
						{
							"name": "200 DOM - Document FE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0377ee4a-5c3b-4004-8227-2aa9e75e4436",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ccb57a90-7acf-4274-ba3b-e57d59945740",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/dom/045eff7c-e9dc-4c6d-a823-10aa3453a028/statuses"
							},
							"response": []
						},
						{
							"name": "200 CL - Document DTE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ad27091b-bdcc-40d7-ad32-1860212e7375",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "470fa90e-2ba9-49ef-b1f0-50c670badab5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/152b5e48-fad4-4787-938e-113f8e67cdfb/statuses"
							},
							"response": []
						},
						{
							"name": "200 CL - Document EnvioRecibos with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d13217a-b537-473e-bd92-7275f815323a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e36f216b-9035-49fb-a637-c546329e2c83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/5BA58B25-6FF3-4BC2-8B9E-F6AC4B0BEF28/statuses"
							},
							"response": []
						},
						{
							"name": "200 CL - Document LibroCompraVenta with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8adefa95-4df7-4245-b1be-4e168f74426d",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7bca7255-bd03-4650-bf47-f39fc463b5e5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/C3729F7A-52A8-4161-B9BD-F542600710A6/statuses"
							},
							"response": []
						},
						{
							"name": "200 CL - Document RespuestaDTE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ec58f0d7-63b4-4b96-9701-7b69811f4316",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "57cf7147-3b99-4fc0-84fc-96764dddc108",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/1FD7F789-6CA3-4F4E-A1A1-64CE536E69A9/statuses"
							},
							"response": []
						},
						{
							"name": "200 CL - Document RESULTADO_ENVIO_DTE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e42a08b1-c654-4659-ac7a-5f218786ce9b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a4bf2e79-e06b-4392-8aaa-0ea2511fe9c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cl/69A9A4CC-8319-45BC-AA43-D35C388FF742/statuses"
							},
							"response": []
						},
						{
							"name": "200 CRI - Document CRI_FE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "548ffe5f-72fc-42d4-bcdf-36e5e655cc40",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "00b72c4e-b64e-48fa-9737-e050e2071ff4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cr/7f69b17d-1264-4552-9fa1-782252e7ded5/statuses"
							},
							"response": []
						},
						{
							"name": "200 CRI - Document CRI_FEX with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1dfb287-8cce-4e08-9682-45ec72417c21",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "50e02a4a-ef3d-42fb-9e02-bea7cadf48fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cr/458f7ef3-6220-4f41-9939-bff2176de698/statuses"
							},
							"response": []
						},
						{
							"name": "200 CRI - Document CRI_NCE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "25eb9a61-28c5-4cc2-8d1c-59268fe9ce2b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "9e1a2ebe-54fd-403e-ab90-2c6c3641dc0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cr/e2a45116-92e9-43b4-8ee9-c7fb54c93872/statuses"
							},
							"response": []
						},
						{
							"name": "200 CRI - Document CRI_NDE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e5c29dff-7c4c-4eb5-9d16-74b742a90c2f",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5acb420f-a980-48fe-b892-8dc53c736e29",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cr/c61a98dd-d238-49dd-a176-e41dba038d01/statuses"
							},
							"response": []
						},
						{
							"name": "200 CRI - Document CRI_TE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2750f304-73e9-4b91-ac3b-644509c16ab0",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "fe50ff16-628a-4f9d-9453-6fd417a43239",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/cr/0e4a4531-3128-4138-a19e-0af0f305055b/statuses"
							},
							"response": []
						},
						{
							"name": "200 AR - Document CAEA with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e809ead8-fad2-4333-bd54-e0635b143e86",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "05a06468-488a-4e61-90d8-29cd01d2c872",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ar/005912BC-9EA1-44F6-A8A2-BAE1649AE911/statuses"
							},
							"response": []
						},
						{
							"name": "200 AR - Document COT with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1bfcb69d-0eb1-41a7-bb07-1a1ea2a3ad64",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2640bfb5-0699-4af3-ba3d-946a5fb3d721",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ar/f107369a-84d1-4ef5-ae95-68d42440c28a/statuses"
							},
							"response": []
						},
						{
							"name": "200 AR - Document FEAuthorize with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "94b05f34-87c6-40fc-9628-d8653d74fad1",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0935a42a-04ed-47d5-8ff2-4425e9b51dd8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ar/2c8186cd-5b7b-445e-ac46-ac85ddca2d8d/statuses"
							},
							"response": []
						},
						{
							"name": "200 AR - Document FEV1Authorize with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c989a350-86e6-4591-90f6-816f37bea5eb",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c604b3a9-3ef1-4fc8-9afc-d2a3f05c7403",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ar/23d53962-a7b3-4493-99a0-2f2156be462a/statuses"
							},
							"response": []
						},
						{
							"name": "200 AR - Document FEXAuthorize with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "29e6552f-02c2-4ffd-a885-cbed0b0a92e0",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1f1d2e53-308c-471b-bf57-5ef831466cf4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ar/57598174-2501-4517-abd5-7c86ed1d683b/statuses"
							},
							"response": []
						},
						{
							"name": "200 MX  - Document CFDI with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aae9ce88-04a3-4b1c-a333-1d496f79c4d4",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8285c01a-5009-4ad7-8d35-0bf01784502b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/mx/29A9B253-CFC1-4B09-8228-80F90932FF59/statuses"
							},
							"response": []
						},
						{
							"name": "200 MX  - Document CFDI with status (Processing)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b908ffb-a362-44c4-a0d4-62cec388530b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c0c65f7f-4d50-4436-8915-27797d352136",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/mx/e4667280-01de-4abc-8660-2b0babeb679b/statuses"
							},
							"response": []
						},
						{
							"name": "200 MX  - Document cancCFDI with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcd8bc6d-7fe9-40f7-8fc5-4549533ccdac",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b1e584bc-6721-4690-b848-6ebbb3fcb2f5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/mx/70B77862-1E41-4AA1-B13B-A68D4E2FD665/statuses"
							},
							"response": []
						},
						{
							"name": "200 UR  - Document CFE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c433c317-601d-4487-8865-9ebc26594a49",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "043ae99e-6272-4215-b4dc-14b476d3be2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ur/1634b607-36de-4a59-82ca-a83e34536277/statuses"
							},
							"response": []
						},
						{
							"name": "200 UR  - Document ReportCFE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d658e22-2445-47f8-bca9-b81b3cb714da",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2d5816e9-54cb-4915-b505-de50a3934754",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ur/2d2bb9d4-66c9-4c1a-9123-9ad990f3dc85/statuses"
							},
							"response": []
						},
						{
							"name": "200 UR  - Document RespuestaCFE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3825a82-3edb-4ca9-9476-e21334d32ee5",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "2784966a-3b67-4366-ac2a-1f4831dd4f16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ur/0689A7F1-9361-40B4-991C-4ACACC1F1B97/statuses"
							},
							"response": []
						},
						{
							"name": "200 EC  - Document facturaEC with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dcff72de-58cb-4966-83f1-5ef1b50b19a8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0e47ee02-0f3e-400a-9e13-7a3e6771eafb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/ec/afc12495-50a9-4c06-b5ef-a1bd11eb9e32/statuses"
							},
							"response": []
						},
						{
							"name": "200 PE  - Document comprobantePE with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b54b5b5-325f-4573-b7e4-dd0c7a02c226",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d3dbc966-9351-488a-a566-3dbdbaa204e6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/29A9B253-CFC1-4B09-8228-80F90932FF59/statuses"
							},
							"response": []
						},
						{
							"name": "200 PE  - Document PER_BOL with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06e2821c-10d5-47c6-97b7-901f68ae6e0c",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3591d9c3-f068-4370-90be-7ebbf0274e6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/B6C57156-EC13-4B73-8573-9BFDA612F73D/statuses"
							},
							"response": []
						},
						{
							"name": "200 PE  - Document PER_CRED with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fc13d9a8-87f9-4596-be41-55b50230fe94",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "aa5451cc-2383-4d00-851d-8af936bc6ebc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/4E96598B-4A82-4B53-A4E7-589402AA3F70/statuses"
							},
							"response": []
						},
						{
							"name": "200 PE  - Document PER_DEB with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d6e18c7-7b50-4978-8fcd-503139d81e08",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e0a32da3-3812-4288-8250-4ab845835ab5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/f61f19c7-0811-4909-b57e-bb346dc7412f/statuses"
							},
							"response": []
						},
						{
							"name": "200 PE  - Document PER_FAC with status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca6b022e-d388-40b9-bf11-170a60524a52",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.status).to.eql(200);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(true);",
											"    pm.expect(jsonData.message).to.eql(\"Document statuses returned\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											"",
											"pm.test(\"It should retrieve the status fields filled\", function () {",
											"    pm.expect(jsonData.data.status.code).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.event).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.message).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.category).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.semaphore).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.comments).to.not.eql(null);",
											"    pm.expect(jsonData.data.status.createdTimestamp).to.not.eql(null);",
											"    var status = jsonData.data.status;",
											"    if (status > 0) {",
											"        pm.expect(true).to.be.true;",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a9cc4009-5c8f-4aec-87f2-62ff327565f1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/pe/50089c30-ece3-4aba-a600-34ce97f4596d/statuses"
							},
							"response": []
						},
						{
							"name": "404 - Request with invalid documentId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f621f487-a6eb-4f6e-bc92-94281d44b415",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Not Found\");",
											"     pm.expect(pm.response.text()).to.include(\"Document status not found\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a45a473b-baff-4afb-8103-3178f745ce14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/1231420c-8d2e-4cbf-a07a-0560867f0231/statuses"
							},
							"response": []
						},
						{
							"name": "404 - Document with status not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "badbd508-a1d8-4daf-bf34-0c4d3729eedc",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"    pm.expect(jsonData.status).to.eql(404);",
											"});",
											"",
											"pm.test(\"It should return general payload.\", function() {",
											"    pm.expect(jsonData.success).to.eql(false);",
											"    pm.expect(jsonData.message).to.eql(\"Not Found\");",
											"     pm.expect(pm.response.text()).to.include(\"Document status not found\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "86a472f9-f492-4140-b3af-bbdd4fc4bb34",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/26B36C9E-0CBB-4289-AB4C-4929D8B3CAC3/statuses"
							},
							"response": []
						}
					],
					"id": "74dedee9-d008-426b-9782-ae269b5d1b2b",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9d228be9-e908-4a69-b358-4f746e33d306",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "55986635-38e8-446e-8588-dd7dcb2c2b8a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "detail",
					"item": [
						{
							"name": "200 - Retrieve a document by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7cf5d918-a17f-48a5-92be-96eb9a02f5b2",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var documentId = \"c3a7cd96-3287-40af-aec0-b1ca931edf5e\"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData.status).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"It should return general payload.\", function() {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It should return the retrieved documentId.\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(documentId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "52defb19-e684-41d6-b19b-dae799d199be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/c3a7cd96-3287-40af-aec0-b1ca931edf5e"
							},
							"response": []
						},
						{
							"name": "200 - Retrieve a document by Id (MX)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5a934f5-e7f5-439a-b56e-5e3ee14fec92",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var documentId = \"c3a7cd96-3287-40af-aec0-b1ca931edf5e\"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.expect(jsonData.status).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"It should return general payload.\", function() {\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"    pm.expect(jsonData.message).to.eql(\"Document listed\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"It should return the retrieved documentId.\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(documentId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c897de45-caf3-49ba-914e-e8a786e5448e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/mx/e4667280-01de-4abc-8660-2b0babeb679b"
							},
							"response": []
						},
						{
							"name": "404 - Document Id Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7fab7ee3-a64a-4f91-b944-886d965a7c57",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    pm.expect(jsonData.status).to.eql(404);\r",
											"});\r",
											"\r",
											"pm.test(\"It should return general payload.\", function() {\r",
											"    pm.expect(jsonData.success).to.eql(false);\r",
											"    pm.expect(jsonData.message).to.eql(\"Not Found\");\r",
											"     pm.expect(pm.response.text()).to.include(\"Document Not Found\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3db7c53c-4772-493a-a989-a72b83ee83e0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/a7d478f1-d741-4583-a5fa-3c94facf0f29"
							},
							"response": []
						},
						{
							"name": "400 - Document with invalid document Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28263691-cba3-4581-b050-11de5aa5f039",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    pm.expect(jsonData.status).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"It should return general payload.\", function() {\r",
											"    pm.expect(jsonData.success).to.eql(false);\r",
											"    pm.expect(jsonData.message).to.eql(\"Bad Request\");\r",
											"     pm.expect(pm.response.text()).to.include(\"Invalid field documentId\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(\"\");\r",
											"    pm.expect(jsonData.timestamp).to.not.eql(null);\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "afdd8b37-d331-4cf7-a387-07c3b9785a1f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bff.authorization}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": "{{bff.url}}/api/v1/documents/br/01234567-sd-teste-rre"
							},
							"response": []
						}
					],
					"id": "f3576fa3-6612-4e7b-b0aa-5b60a163c8b0",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "49562c71-d969-40ff-962a-7bfd7072c890",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "db5fb87a-61a8-4d8a-985d-9d33f5e6ceef",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"id": "4e3dcdae-c3ff-456d-a210-5280392907b1"
		},
		{
			"name": "UPLOAD JSON CONFIG",
			"item": [
				{
					"name": "200 - Upload product configuration JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "154137f7-dcfc-4572-a3a1-0e02b9fa4b51",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Success should be true\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"true\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Product configuration changed.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bd1bfa07-7707-47cb-9863-4601c60c6db4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{bff.authorization}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Data",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Data",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{bff.url}}/api/v1/products/:countryCode/:productId",
							"host": [
								"{{bff.url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":countryCode",
								":productId"
							],
							"variable": [
								{
									"id": "fb28a4a8-34fa-4a3c-9ded-23f308a2842e",
									"key": "countryCode",
									"value": "mx",
									"type": "string"
								},
								{
									"id": "0ec483a1-7770-4dce-abab-0f8a8bab1d24",
									"key": "productId",
									"value": "cfdi",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "200 - CFDI Product Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc88ff49-7909-407a-a756-1bc175d9b770",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check Message from Body\", function () {",
									"    pm.expect(jsonData.message).to.eql(\"Product configuration listed\");",
									"});",
									"",
									"pm.test(\"Success should be true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Checking response mandatory nodes\", function () {",
									"    if (jsonData.success == \"true\"){",
									"        pm.test(\"data node and timestamp exists\", function () {",
									"            pm.expect(jsonData).to.have.property('data');",
									"            pm.expect(jsonData).to.have.property(\"timestamp\");",
									"            pm.expect(pm.response.text()).to.include(\"drawer\");",
									"            pm.expect(pm.response.text()).to.include(\"hero\");",
									"            pm.expect(pm.response.text()).to.include(\"breadCumb\");",
									"        });",
									"    } else {",
									"        pm.test(\"timestamp exists\", function () {",
									"            pm.expect(jsonData).to.have.property(\"timestamp\");",
									"        });",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f5b1bcbb-1d93-4c44-9598-da8e220169a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{bff.authorization}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Basic dHJ1c3RmaWxlczpUcnVzdGZpbGVzMTIz",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"disabled": true
							},
							{
								"description": "Header used by postman mock to force http status, please ignore.",
								"key": "x-mock-response-code",
								"type": "text",
								"value": "200",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{bff.url}}/api/v1/products/:productId",
							"host": [
								"{{bff.url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":productId"
							],
							"query": [
								{
									"key": "productGroup",
									"value": "br_nfe",
									"disabled": true
								}
							],
							"variable": [
								{
									"id": "22200999-d020-4ddb-8ce2-72f857031a54",
									"key": "productId",
									"value": "cfdi",
									"type": "string"
								}
							]
						},
						"description": "Get product configuration"
					},
					"response": [
						{
							"id": "7d23e606-bec9-40ff-8810-53b596c37965",
							"name": "Rerieve br_nfe product group configuration",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{tf.bff.url}}/api/v1/products?productGroup=br_nfe",
									"host": [
										"{{tf.bff.url}}"
									],
									"path": [
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "productGroup",
											"value": "br_nfe"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\r\n  \"success\": \"true\",\r\n  \"status\": \"200\",\r\n  \"message\": \"Product configuration listed\",\r\n  \"timestamp\": \"1581349440\",\r\n  \"data\": {\r\n    \"product\": {\r\n      \"productGroup\": \"br_nfe\",\r\n      \"country\": \"BR\",\r\n      \"documentTypes\": [\r\n        {\r\n          \"documentType\": \"nfe\",\r\n          \"namespaces\": [\r\n            {\r\n              \"prefix\": \"\",\r\n              \"uri\": \"http://www.portalfiscal.inf.br/nfe\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"mappings\": [\r\n        {\r\n          \"section\": {\r\n            \"name\": \"overview\",\r\n            \"parentProperty\": \"header\"\r\n          },\r\n          \"properties\": [\r\n            {\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Database location\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"radiobutton\",\r\n                    \"options\": [\r\n                      \"Current\",\r\n                      \"Historical\"\r\n                    ]\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Creation Date\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"DatePickerRange\",\r\n                    \"format\": \"dd/MM/yyyy\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar1\",\r\n                \"key\": true\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"CNPJ Emitente\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"table\": {\r\n                    \"label\": \"CNPJ Emitente\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar2\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Nome Emitente\",\r\n                  \"displayAsColumn\": true,\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"middle\": {\r\n                    \"label\": \"Nome Emitente\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar3\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"CPF/CNPJ Destinatário\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"table\": {\r\n                    \"label\": \"CPF/CNPJ Destinatário\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar4\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Nome Destinatário\",\r\n                  \"displayAsColumn\": true,\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"middle\": {\r\n                    \"label\": \"Nome Destinatário\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar9\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Campo Extra\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagInt1\",\r\n                \"key\": true\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Série\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"text\",\r\n                    \"format\": \"F0\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Série\",\r\n                    \"displayAsTitle\": true\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagInt2\",\r\n                \"key\": true\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Num NF\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"TextRange\",\r\n                    \"format\": \"F0\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Num NF\",\r\n                    \"displayAsTitle\": true,\r\n                    \"displayAsBreadCrumb\": true,\r\n                    \"concatenateSymbol\": \"#\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagInt4\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Tipo Emissão\",\r\n                  \"displayAsColumn\": true,\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagDate1\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Data Emissão\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"DatePickerRange\",\r\n                    \"format\": \"dd/MM/yyyy\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Data Emissão\",\r\n                    \"displayAsSubTitle\": true,\r\n                    \"iconName\": \"\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagDate2\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Data Entrada\",\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"DatePickerRange\",\r\n                    \"format\": \"dd/MM/yyyy\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagFloat1\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Total NF\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"TextRange\",\r\n                    \"format\": \"F2\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Total NF\",\r\n                    \"displayAsSubTitle\": true,\r\n                    \"iconName\": \"\",\r\n                    \"concatenateSymbol\": \"\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"StatusDescription\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Status\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"type\": \"Dropdown\",\r\n                    \"options\": [\r\n                      \"\"\r\n                    ]\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"header\": {\r\n                    \"label\": \"Status\",\r\n                    \"displayAsSubTitle\": true,\r\n                    \"iconName\": \"\"\r\n                  }\r\n                }\r\n              }\r\n            },\r\n            {\r\n              \"persistence\": {\r\n                \"fieldName\": \"TagVarchar10\"\r\n              },\r\n              \"ui\": {\r\n                \"grid\": {\r\n                  \"displayName\": \"Chave de Acesso\",\r\n                  \"displayAsColumn\": true,\r\n                  \"filter\": {\r\n                    \"display\": true,\r\n                    \"filterType\": \"text\"\r\n                  },\r\n                  \"exportable\": true,\r\n                  \"sortable\": true\r\n                },\r\n                \"details\": {\r\n                  \"table\": {\r\n                    \"label\": \"Chave de Acesso\",\r\n                    \"display\": true\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}"
						}
					]
				},
				{
					"name": "400 - Upload a product configuration JSON with broken B64",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2521d990-6bed-49d9-8b79-bf4f3ef97e17",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid file\");\r",
									"});\r",
									"\r",
									"pm.test(\"Success should be false\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0c205c31-590c-45c2-b124-ab477c2bd3d4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{bff.authorization}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Data",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Data",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{bff.url}}/api/v1/products/:countryCode/:productId",
							"host": [
								"{{bff.url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":countryCode",
								":productId"
							],
							"variable": [
								{
									"id": "ba1061ac-7845-4996-8149-92c6ff5a0625",
									"key": "countryCode",
									"value": "mx",
									"type": "string"
								},
								{
									"id": "0a552800-52f1-4670-a2e2-e5bb55ffb50b",
									"key": "productId",
									"value": "cfdi",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400 - Upload a product configuration JSON with invalid value in B64",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dff68db2-29ca-46f2-a08a-68f20b870b35",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid file\");\r",
									"});\r",
									"\r",
									"pm.test(\"Success should be false\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9a9b6abe-ae35-479a-a48f-c8dca33076f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{bff.authorization}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Data",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Data",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{bff.url}}/api/v1/products/:countryCode/:productId",
							"host": [
								"{{bff.url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":countryCode",
								":productId"
							],
							"variable": [
								{
									"id": "87e4acfc-f08d-4d62-ab31-f31025a6063d",
									"key": "countryCode",
									"value": "mx",
									"type": "string"
								},
								{
									"id": "918a04dc-bd0c-496f-ae4d-fe95516aa4cf",
									"key": "productId",
									"value": "cfdi",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404 - Upload valid config JSON with invalid params",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64db7760-e99d-4b4b-a147-12fa4625505b",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Product not found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Success should be false\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "04880c83-9a40-4daf-bcc5-d5cc89318e05",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{bff.authorization}}"
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Data",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Data",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{bff.url}}/api/v1/products/:countryCode/:productId",
							"host": [
								"{{bff.url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":countryCode",
								":productId"
							],
							"variable": [
								{
									"id": "ae34aecb-f063-4e84-9f12-c27bd9b00060",
									"key": "countryCode",
									"value": "br",
									"type": "string"
								},
								{
									"id": "b8c4acd3-a093-4165-8bb8-c7b47bf03813",
									"key": "productId",
									"value": "cfdi",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc013222-3fbb-4de9-95d4-befb1df38090",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Invalid credentials\");\r",
									"});\r",
									"\r",
									"pm.test(\"Success should be false\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"false\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "05999fea-6d23-4bf7-8ef0-3c4c00069ac4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "PUT",
						"header": [
							{
								"key": "Data",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Data",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{bff.url}}/api/v1/products/:countryCode/:productId",
							"host": [
								"{{bff.url}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								":countryCode",
								":productId"
							],
							"variable": [
								{
									"id": "0844032f-6441-40bd-b911-3725edb011d5",
									"key": "countryCode",
									"value": "mx",
									"type": "string"
								},
								{
									"id": "d8fcb621-13f6-4b27-b928-13f63cb73f2c",
									"key": "productId",
									"value": "cfdi",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "edb4b5a8-5bc5-401f-bee7-7c2f1c9489e5"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "370a1873-76ac-47a5-99c9-7d9838931eb4",
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest({",
					"    url: pm.environment.get(\"bff.url\")+\"/api/v1/iam/login\", ",
					"    method: 'POST',",
					"    header: {",
					"        \"Content-Type\": \"application/json\",",
					"    },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            {key: \"username\", value: pm.environment.get(\"bff.username\"), disabled: false},",
					"            {key: \"password\", value: pm.environment.get(\"bff.password\"), disabled: false}",
					"        ]",
					"    }",
					"}, function (err, res) {",
					"    pm.environment.set(\"bff.authorization\", res.headers.get(\"platform-token\"));",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "43e2ea8c-50d7-4b33-a09e-e15c3c4e6728",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}